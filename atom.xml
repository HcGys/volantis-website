<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-29T05:10:00.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>家用网络布局</title>
    <link href="http://example.com/2023/06/17/2023/23-05@%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E5%B8%83%E5%B1%80/"/>
    <id>http://example.com/2023/06/17/2023/23-05@%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E5%B8%83%E5%B1%80/</id>
    <published>2023-06-17T12:00:00.000Z</published>
    <updated>2023-06-29T05:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、概览">一、概览</h2><p>外网部分：中国电信 200M 宽带，30 元每月。</p><p>内网部分：以畅网 N100 软路由为核心，爱快四拨，小米 AX6000 有线中继作无线 AP，通过爱快 S3009MT 组 2.5G 内网，负责 PC、NAS、手机等设备网络；以华三 ER3208G3 为核心，红米 AX3000 有线中继做无线 AP，主要负责家用智能家居设备，小米网关。</p><p><img src="../../img/article/23-05@%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E5%B8%83%E5%B1%80/%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9B%BE.png" alt="家用网络拓扑图"></p><p>在多线程应用中，爱快多拨最高可达到如下网速：</p><p><img src="../../img/article/23-05@%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E5%B8%83%E5%B1%80/1686673300848.png" alt="电信200M宽带爱快四拨网络测速"></p><p><img src="../../img/article/23-05@%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E5%B8%83%E5%B1%80/image-20230622005907712.png" alt="设备"></p><h2 id="二、软路由">二、软路由</h2><p>底层环境：ESXi 8.0.0，部署 iKuai，Ubuntu Server。</p><p>原本是打算部署一个 OpenWrt 作为旁路由，负责代理+广告过滤，后来又觉得只为了这两个功能额外调整网络结构不太至于，更何况电脑和手机可以直接安装 Clash，全局代理的需求没那么强烈，所以最终是单独安装了 Ubuntu Server 22.04 LTS，再部署 1Panel 面板方面管理。</p><p><img src="../../img/article/23-05@%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E5%B8%83%E5%B1%80/1688013488755.jpg" alt="家用地址规划"></p><h2 id="三、参考资料">三、参考资料</h2><ul><li>ESXi 系统安装参考：<a href="https://post.smzdm.com/p/a8x6o5on/">ESXi 8.0虚拟机必备知识与保姆级安装过程</a></li><li>ESXi 驱动封装参考：<a href="https://www.bilibili.com/video/BV1Wd4y1A7Ho">一个视频说清esxi驱动封装那点事！</a></li><li>iKuai 多拨分流参考：<a href="https://www.bilibili.com/video/BV1ZW4y147FG">【iKuai】爱快软路由的多线负载（多拨叠加）</a></li><li>Ubuntu 配置 LVM：<a href="https://segmentfault.com/a/1190000039404183">Ubuntu 20.04 配置 LVM（qbit）</a>、<a href="https://linux.cn/article-15152-1.html">在 Linux 中创建 LVM 分区的分步指南</a></li><li>Ubuntu Samba 配置：<a href="https://www.ywbj.cc/?p=1064">Linux搭建samba文件共享服务器</a></li><li>DOcker 开启 IPV6 网络：<a href="https://docs.docker.com/config/daemon/ipv6/">Enable IPv6 support</a></li></ul><p>备注：ESXI8.0 安装过程唯一的异同点在于对 VMFSL 分区的处理上：替代 <code>autoPartotionOSDataSize</code> 为 <code>systemMediaSize </code>，<a href="https://docs.vmware.com/cn/VMware-vSphere/7.0/com.vmware.esxi.install.doc/GUID-474D003B-C6FB-465D-BC1B-5FD30F8E2209.html#esxi-70--1">systemMediaSize</a> 参数接受以下值：min, small, default, max。</p><hr><h2 id="更新">更新</h2><p>重新调整了布局，原先的 H3C 设备全部撤下，光猫后接入软路由：软路由下接爱快交换机，极空间/路由器/电脑接入交换机中。红米路由器通过 MESH 连接到小米路由器中，不再独立分出专用智能家居网络。</p><p>为了弥补这部分安全性，DHCPv6 模式设置为有状态，同时使用 DHCPv6 黑白名单，仅对白名单中的设备分配 IPV6 地址，如此便不用担心内网设备全部暴漏在公网所带来的安全隐患了。</p><p><img src="../../img/article/23-05@%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E5%B8%83%E5%B1%80/23-06-29_124205.png" alt="DHCPv6"></p>]]></content>
    
    
    <summary type="html">记录家用网络布局、规划、搭建等过程。</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="软路由" scheme="http://example.com/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
    <category term="爱快" scheme="http://example.com/tags/%E7%88%B1%E5%BF%AB/"/>
    
    <category term="EXSI" scheme="http://example.com/tags/EXSI/"/>
    
  </entry>
  
  <entry>
    <title>中国电信跨省宽带</title>
    <link href="http://example.com/2023/05/04/2023/23-05@%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E8%B7%A8%E7%9C%81%E5%AE%BD%E5%B8%A6/"/>
    <id>http://example.com/2023/05/04/2023/23-05@%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E8%B7%A8%E7%9C%81%E5%AE%BD%E5%B8%A6/</id>
    <published>2023-05-04T13:00:00.000Z</published>
    <updated>2023-05-04T16:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>跨省宽带可能是现阶段下最容易办到优惠且便宜的宽带了，比融合套餐资费低，又比单宽带网速选择多，用户自主申请，没有限时活动、相关地域等限制。</p><h2 id="一、电信宽带">一、电信宽带</h2><p>说说我原先的宽带套餐：128 元每月， 30G 流量 + 500 分钟通话 + 一条 300M 宽带 + 一个从来没用过的 IPTV 组成的融合套餐。自己又有上直播课的需求，而电信的单宽带最高只提供到 100M，两年付 1600 元，当时营业厅的客服又说可以给融合套餐加一个八折优惠外加免除办理费用，额外又赠送天翼看家（实为小度音响）、蓝牙耳机（Vivo 的某个耳机），总之最后是签订了两年的融合套餐。</p><p>这个合约在今天四月底结束，原先给的八折优惠也是同时到期，问了当初办理宽带的电信营业厅人员告知最近也没有什么优惠套餐，那不就扯犊子了。几番搜寻，网上大部分超级优惠的宽带车或多或少都有地区限制，我所在的合肥是啥也没有，或者就是移动/联通等运营商的融合套餐宽带，由于我实在不想再多一个手机号了一开始也就没考虑改换，最终是查到了跨省宽带，相对前置条件较少，价格便宜。</p><h2 id="二、跨省宽带">二、跨省宽带</h2><p>申请路径：中国电信 APP -&gt; 查询办理 -&gt; 宽带 -&gt; 跨省办宽带。</p><p>按照要求填写申请表后，等待电话回访，然后在对应省份的电信公众号上完成实名验证、安装费（100 元）缴纳就可以等待师傅上门安装了，注：安装的时候师傅告诉我这个单子只有一个光猫，没有路由器。</p><p><img src="../../img/article/23-05@%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E8%B7%A8%E7%9C%81%E5%AE%BD%E5%B8%A6/Screenshot_2023-05-04-21-56-38-882_com.ct.client.jpg" alt="Screenshot_2023-05-04-21-56-38-882_com.ct.client"></p><p>它的前置要求只有两点：</p><ul><li>宽带安装省份与申请手机归属地不能相同。</li><li>申请手机的套餐月消为每月 29 元以上。</li></ul><h2 id="三、宽带安装">三、宽带安装</h2><p>我这个算是换套餐，但也需要先拆机再安装，到中国电信 APP 里找人工客户申请注销手机号、宽带号，一切完成后就可以安装新的宽带了，额外注：中国电信的注销话费去向可以直接转到银行卡，记得以前注销中国移动、联通账户时线上只能选择转移话费到同省份手机号下，现在倒是方便的多。</p><p>电信师傅在调试好光猫，跑一遍网速后就算是结束了，过程中把路由器设置为 DHCP，这样子会影响到外网访问内网设备，所以老规矩网上搜中国电信管理员密码改桥接走路由器拨号，宽带的密码可以在中国电信 APP 中更改，此外在光猫的管理员账户下可以明文查看，需留意。</p><p><img src="../../img/article/23-05@%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1%E8%B7%A8%E7%9C%81%E5%AE%BD%E5%B8%A6/192.168.1.1_8080_main.html.png" alt="192.168.1.1_8080_main.html"></p>]]></content>
    
    
    <summary type="html">跨省宽带可能是现阶段下最容易办到优惠且便宜的宽带了，比融合套餐资费低，又比单宽带网速选择多，用户自主申请，没有限时活动、相关地域等限制。</summary>
    
    
    
    <category term="资料" scheme="http://example.com/categories/%E8%B5%84%E6%96%99/"/>
    
    
    <category term="宽带" scheme="http://example.com/tags/%E5%AE%BD%E5%B8%A6/"/>
    
    <category term="中国电信" scheme="http://example.com/tags/%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 22.04 使用速查</title>
    <link href="http://example.com/2023/03/27/2023/23-03@Ubuntu22.04%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/"/>
    <id>http://example.com/2023/03/27/2023/23-03@Ubuntu22.04%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/</id>
    <published>2023-03-27T10:40:00.000Z</published>
    <updated>2023-03-27T10:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、基础">一、基础</h2><h3 id="1-双系统时差问题">1. 双系统时差问题</h3><ul><li>Windows 下管理员身份终端执行：</li></ul><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>Linux 终端下执行：</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">timedatectl set-local-rtc 1 --adjust-system-clock</span><br></pre></td></tr></table></figure><div class="note bug red"><p>提示：<strong>两种方案二选一</strong>。</p></div><h3 id="2-网络联通性问题">2. 网络联通性问题</h3><p>Clash for windows 有 Linux 打包，下载对应版本即可：<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">Releases</a> 。</p><p>设置-网络-网络代理-手动： HTTP 代理/Socks 主机： <code>127.0.0.1</code> <code>7890</code></p><h3 id="3-终端下-Github-拒绝连接">3. 终端下 Github 拒绝连接</h3><p>利用 <a href="https://www.whatsmydns.net/">whatsmydns</a> 检查 <code>raw.githubusercontent.com</code> 的解析地址。</p><p>修改该域名的 hosts 解析：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>根据实际查询到的解析地址添加如下内容</span></figcaption><table><tr><td class="code"><pre><span class="line">185.199.110.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure><h3 id="4-替换默认-Shell">4. 替换默认 Shell</h3><p>将默认的 Bash 替换为 Zsh, oh-my-zsh 。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install git zsh</span><br><span class="line">sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class="line">chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure><div class="note info blue"><p>提示：切换没有生效可以重启。</p></div><h3 id="5-替换-deb-包安装器">5. 替换 deb 包安装器</h3><p>还在为环境依赖犯愁吗，那么替换 <code>dpkg</code> 命令为 <code>gdebi</code> 吧。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install gdebi</span><br></pre></td></tr></table></figure><h3 id="6-恢复已拥有的-SSH-密钥">6. 恢复已拥有的 SSH 密钥</h3><p>将相关文件拷贝到 <code>~/.ssh/</code> 目录中，调整相关文件的权限。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure><details blue><summary> 目录权限表 </summary>              <div class='content'>              <table><thead><tr><th style="text-align:center">目录</th><th style="text-align:center">文件</th><th style="text-align:center">权限</th></tr></thead><tbody><tr><td style="text-align:center">.ssh</td><td style="text-align:center"></td><td style="text-align:center">700</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">authorized_keys</td><td style="text-align:center">600</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">id_rsa / id_ed25519</td><td style="text-align:center">600</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">id_rsa.pub / id_ed25519.pub</td><td style="text-align:center">644</td></tr></tbody></table>              </div>            </details><h3 id="7-恢复已拥有的-GPG-密钥">7. 恢复已拥有的 GPG 密钥</h3><p>在密钥文件处打开终端，假设文件为 <code>gpg-private.key</code> ：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gpg --import gpg-private.key</span><br></pre></td></tr></table></figure><details blue><summary> 配置密钥并开启全局签名验证 </summary>              <div class='content'>              <figure class="highlight shell"><figcaption><span>配置 GPG 密钥 ID 并开启全局 GPG 签名验证</span></figcaption><table><tr><td class="code"><pre><span class="line">➜  ~ git config --global user.signingkey xxxxxxxxxxxxxxxx</span><br><span class="line">➜  ~ git config --global commit.gpgsign true</span><br></pre></td></tr></table></figure>              </div>            </details><h3 id="8-解决可能的语言翻译不全">8. 解决可能的语言翻译不全</h3><p>移步到 <strong>所有软件</strong>→<strong>设置</strong>→<strong>区域和语言</strong>→<strong>管理已安装的语言</strong> ，完成语言列表的更新。</p><h3 id="9-中文环境下调整目录为英文">9. 中文环境下调整目录为英文</h3><p>为了便于终端下进出目录；在弹出页面点击更新名称，记得勾选 <em>Don’t ask me again.</em></p><figure class="highlight shell"><figcaption><span>依次执行，完成后建议重启</span></figcaption><table><tr><td class="code"><pre><span class="line">export LANG=en_US</span><br><span class="line">xdg-user-dirs-gtk-update</span><br><span class="line">export LANG=zh_CN</span><br></pre></td></tr></table></figure><h2 id="二、应用">二、应用</h2><h3 id="1-中州韵输入法">1. 中州韵输入法</h3><figure class="highlight shell"><figcaption><span>安装中州韵</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo apt install ibus-rime</span><br></pre></td></tr></table></figure><figure class="highlight shell"><figcaption><span>调整输入方案为简体中文</span></figcaption><table><tr><td class="code"><pre><span class="line">gedit ~/.config/ibus/rime/build/default.yaml</span><br></pre></td></tr></table></figure><p>在文件中查找 <code>schema_list</code>，将 <code>luna_pinyin_simp</code> 提到最前列，最后重新部署即可。</p><div class="note info blue"><p>提示：搜狗和百度输入法有基于 Fcitx 方案的中文输入法，可自行尝试。</p></div><div class="note info blue"><p>提示：百度输入法提供的安装包中有一份相当详细的安装文档，如需使用可去查阅。</p></div><h3 id="2-应用启动器">2. 应用启动器</h3><p><a href="https://albertlauncher.github.io/">Albert</a>，产品定位类似于 Utools(<em>支持 Ubuntu</em>)，更轻量，萝卜白菜各有所爱。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &#x27;deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_22.10/ /&#x27; | sudo tee /etc/apt/sources.list.d/home:manuelschneid3r.list</span><br><span class="line">curl -fsSL https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_22.10/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_manuelschneid3r.gpg &gt; /dev/null</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install albert</span><br></pre></td></tr></table></figure><h3 id="3-图形化应用图标管理软件">3. 图形化应用图标管理软件</h3><p>相比于终端/文本编辑器，Arronax 的图形化界面使用更方便。</p><figure class="highlight shell"><figcaption><span>PPA 方式安装</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:diesch/stable</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install arronax</span><br></pre></td></tr></table></figure><ul><li>另一方案：官网下载安装包安装 <a href="https://www.florian-diesch.de/software/arronax/#download">Arronax-Download</a> 。</li></ul><h3 id="4-系统快照备份恢复">4. 系统快照备份恢复</h3><p><a href="https://github.com/linuxmint/timeshift">Timeshift</a>：为作死的你提供一份回滚能力。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install timeshift</span><br></pre></td></tr></table></figure><h3 id="5-提供原生支持国产软件">5. 提供原生支持国产软件</h3><ul><li><p><a href="https://www.ubuntukylin.com/applications/106-cn.html">微信</a>：来源优麒麟商店，没有托盘，无法后台。</p></li><li><p><a href="https://im.qq.com/linuxqq/download.html">QQ</a>：全新重构，各项功能可正常使用，点个赞。</p></li><li><p><a href="https://y.qq.com/download/download.html">QQ 音乐</a>：功能上和 Windwos 版本类似。</p><ul><li><p>Ubuntu 22.04 目前打开崩溃，修改启动命令去掉沙盒。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /usr/share/applications/qqmusic.desktop</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exec=/opt/qqmusic/qqmusic --no-sandbox %U</span><br></pre></td></tr></table></figure></li><li><p>（说来搞笑，最先支持的网易云反而在官网把 Linux 应用的下载链接去掉了）</p></li></ul></li><li><p><a href="https://v.qq.com/download.html#Linux">腾讯视频</a>：腾讯视频 Linux 客户端，其实网页看也不是说不可以。</p></li><li><p><a href="https://www.wps.cn/product/wpslinux">WPS</a>：2019 版本，满足轻度办公，另 PDF 可以使用 <a href="https://www.foxitsoftware.cn/downloads/">福昕阅读器</a>。</p></li><li><p><a href="http://cajviewer.cnki.net/download.html">CAJViewer</a>：支持 CAJ、PDF、KDH、NH、CAA、TEB 文件类型。</p></li><li><p><a href="https://pan.baidu.com/download#linux">百度网盘</a>：在限速这块儿，是不分平台拿捏的死死的。</p></li><li><p><a href="https://www.jianguoyun.com/s/downloads">坚果云</a>：同步盘，价格不菲，优势是速度很快。</p></li><li><p><a href="https://www.dingtalk.com/download?source=1121&amp;isLite=0#/">钉钉</a>：钉钉 Linux 版本客户端。</p></li><li><p><a href="http://cidian.youdao.com/multi.html">有道</a>：有道词典 Linux 版。</p></li><li><p><a href="https://xmind.cn/download/">Xmind</a>：思维导图。</p></li></ul><h2 id="三、桌面">三、桌面</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install chrome-gnome-shell</span><br></pre></td></tr></table></figure><hr><p><a href="https://extensions.gnome.org/">GNOME Shell</a> <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>扩展推荐及介绍：</p><ul><li><p><a href="https://extensions.gnome.org/extension/3240/add-to-desktop/">Add to Desktop</a>：在概览页面中的应用增加添加到桌面的右键菜单；</p></li><li><p><a href="https://extensions.gnome.org/extension/3499/application-volume-mixer/">Application Volume Mixer</a>：在系统菜单位置添加控制不同应用的音量大小输出按钮；</p></li><li><p><a href="https://extensions.gnome.org/extension/3628/arcmenu/">ArcMenu</a>：在面板处添加应用菜单功能，可实现多种样式的菜单，比如 Windows11 风格；</p></li><li><p><a href="https://extensions.gnome.org/extension/595/autohide-battery/">Autohide Battery</a>：根据设置电池电量的大小决定是否隐藏面板处的电池图标显示；</p></li><li><p><a href="https://extensions.gnome.org/extension/3488/big-avatar/">Big Avatar</a>：在系统菜单位置添加用户头像，点击可执行所设定的功能；</p></li><li><p><a href="https://extensions.gnome.org/extension/3991/bluetooth-battery/">Bluetooth battery indicator</a>：在面板处添加显示蓝牙设备剩余电量的图标；</p></li><li><p><a href="https://extensions.gnome.org/extension/1401/bluetooth-quick-connect/">Bluetooth Quick Connect</a>：在系统菜单位置添加快速链接蓝牙设备的选项；</p></li><li><p><a href="https://extensions.gnome.org/extension/3193/blur-my-shell/">Blur my Shell</a>：为面板/概览/Dash/应用/锁屏/截图等添加毛玻璃特效<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>；</p></li><li><p><a href="https://extensions.gnome.org/extension/4679/burn-my-windows/">Burn My Windows</a>：为窗口添加超级超级超级炫酷打开/关闭动画；</p></li><li><p><a href="https://extensions.gnome.org/extension/517/caffeine/">Caffeine</a>：在面板处添加一个动态控制屏幕挂起和锁屏的开关；</p></li><li><p><a href="https://extensions.gnome.org/extension/779/clipboard-indicator/">Clipboard Indicator</a>：在面板处添加一个剪切板指示器，能否存储历史复制数据；</p></li><li><p><a href="https://extensions.gnome.org/extension/5473/color-app-menu-icon-for-gnome-40/">Color App Menu Icon for GNOME 40+</a>：使面板的应用菜单处图标显示为常规图标<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>；</p></li><li><p><a href="https://extensions.gnome.org/extension/97/coverflow-alt-tab/">Coverflow Alt-Tab</a>：替换 <kbd>Alt</kbd> + <kbd>Tab</kbd> 切换窗口时的动画效果及显示内容；</p></li><li><p><a href="https://extensions.gnome.org/extension/4112/customize-ibus/">Customize IBus</a>：为基于 IBus 的输入法添加自定义外观/行为/托盘/指示器等设置；</p></li><li><p><a href="https://extensions.gnome.org/extension/307/dash-to-dock/">Dash to Dock</a>：将概览页面的 Dash 调整为 Dock 使用，可固定于左侧/底部；</p></li><li><p><a href="https://extensions.gnome.org/extension/1160/dash-to-panel/">Dash to Panel</a>：将概览页面的 Dash 调整到面板，另可调整面板处图标位置等<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>；</p></li><li><p><a href="https://extensions.gnome.org/extension/2087/desktop-icons-ng-ding/">Desktop Icons NG (DING)</a>：为桌面图标添加控制功能，可设置图标显示/位置等功能；</p></li><li><p><a href="https://extensions.gnome.org/extension/3088/extension-list/">Extension List</a>：在面板处添加一个控制所有 Gnome Shell 插件的图标；</p></li><li><p><a href="https://extensions.gnome.org/extension/1486/extensions-sync/">Extensions Sync</a>：在面板处添加爱一个基于 Gits 的 Gnome Shell 备份同步图标；</p></li><li><p><a href="https://extensions.gnome.org/extension/5091/hide-lock-item-in-system-menu/">Hide Lock item in System Menu</a>：在系统菜单的位置隐藏「锁定」选项；</p></li><li><p><a href="https://extensions.gnome.org/extension/3843/just-perfection/">Just Perfection</a>：为 Gnome Shell 添加定制能力，比如将首次启动行为由概述调整为桌面；</p></li><li><p><a href="https://extensions.gnome.org/extension/36/lock-keys/">Lock Keys</a>：在面板处添加一个 Numlock &amp; Capslock 是否锁定的指示图标；</p></li><li><p><a href="https://extensions.gnome.org/extension/4470/media-controls/">Media Controls</a>：在面板处添加一个媒体控制图标，可显示歌曲信息、切换歌曲等；</p></li><li><p><a href="https://extensions.gnome.org/extension/2182/noannoyance/">NoAnnoyance v2</a>：去除窗口打开时显示的「已就绪」提示，并直接获得焦点置顶显示；</p></li><li><p><a href="https://extensions.gnome.org/extension/4651/notification-banner-reloaded/">Notification Banner Reloaded</a>：为通知提醒添加弹出位置/动画调整功能；</p></li><li><p><a href="https://extensions.gnome.org/extension/5428/one-drive-resurrect/">One Drive Resurrect</a>：在面板处添加一个指示 OneDrive 同步状态的图标<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>；</p></li><li><p><a href="https://extensions.gnome.org/extension/750/openweather/">OpenWeather</a>：在面板处添加一个可显示制定位置天气状态信息的图标；</p></li><li><p><a href="https://extensions.gnome.org/extension/5278/pano/">Pano - Clipboard Manager</a>：另一款剪切板管理应用，卡片式结构显示；</p></li><li><p><a href="https://extensions.gnome.org/extension/8/places-status-indicator/">Places Status Indicator</a>：在面板处添加一个用于显示文件目录导航的快捷菜单；</p></li><li><p><a href="https://extensions.gnome.org/extension/72/recent-items/">Recent Items</a>：在面板处添加一个用于显示最近使用文件的图标；</p></li><li><p><a href="https://extensions.gnome.org/extension/7/removable-drive-menu/">Removable Drive Menu</a>：在面板处添加一个用于访问和卸载可移动设备的图标；</p></li><li><p><a href="https://extensions.gnome.org/extension/1112/screenshot-tool/">Screenshot Tool</a>：在面板处添加一个快捷截图功能的图标，可自定义 Imgur 上传；</p></li><li><p><a href="https://extensions.gnome.org/extension/3933/toggle-night-light/">Toggle Night Light</a>：在面板处添加一个快捷切换夜灯状态的快捷图标<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>；</p></li><li><p><a href="https://extensions.gnome.org/extension/4356/top-bar-organizer/">Top Bar Organizer</a>：为面板处图标显示顺序提供组织功能，强烈推荐，拯救强迫症；</p></li><li><p><a href="https://extensions.gnome.org/extension/19/user-themes/">User Themes</a>：允许从用户目录加载 shell 主题，美化必备插件；</p></li><li><p><a href="https://extensions.gnome.org/extension/3019/user-themes-x/">User Theme X</a>：根据夜灯状态调整主题及背景配置，间接实现日/夜间模式切换；</p></li><li><p><a href="https://extensions.gnome.org/extension/1460/vitals/">Vitals</a>：在面板处添加一个用于显示系统温度/电压/内存/电量/网速等系统信息的图标；</p></li></ul><h2 id="四、美化">四、美化</h2><h3 id="0-优化">0. 优化</h3><p>安装 Gnome tweaks，之后可在应用列表中找到名如「优化<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>」的应用。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-tweaks</span><br></pre></td></tr></table></figure><h3 id="1-主题">1. 主题</h3><p>GTK3/4 主题下载：<a href="https://www.opendesktop.org/browse?cat=135&amp;ord=latest">GTK3/4 Themes</a>；安装于：<code>~/.themes</code></p><ul><li><a href="https://www.opendesktop.org/p/1403328/">WhiteSur Gtk Theme</a>：MacOS Big Sur like theme for Gnome desktops</li></ul><h3 id="2-图标">2. 图标</h3><p>图标下载：<a href="https://www.opendesktop.org/browse?cat=386&amp;ord=latest">Icons</a>；安装于：<code>~/.icons</code></p><p><a href="https://github.com/gusbemacbe">gusbemacbe</a>/<strong><a href="https://github.com/gusbemacbe/suru-plus">suru-plus</a></strong>：Ubuntu 18 时代就在用，蛮久没更新了，凑或者将就吧。</p><h3 id="3-光标">3. 光标</h3><p>图标下载：<a href="https://www.opendesktop.org/browse?cat=107&amp;ord=latest">Cursors</a>；安装于：<code>~/.icons</code></p><p><a href="https://www.opendesktop.org/p/1312616/">Oxygen Neon Large</a>：本站同款，同样用了很久了。</p><h3 id="4-字体">4. 字体</h3><p>字体文件安装于：<code>~/.fonts</code></p><ul><li><p>文泉驿字体 微米黑/正黑</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install fonts-wqy-microhei fonts-wqy-zenhei</span><br></pre></td></tr></table></figure></li><li><p>OPPO Sans：<a href="https://open.oppomobile.com/bbs/forum.php?mod=viewthread&amp;tid=2274">OPPO Sans，用文字探索科技美感</a></p></li><li><p>JetBrains Mono：<a href="https://www.jetbrains.com/lp/mono/">JetBrains Mono. A typeface for developers</a></p></li><li><p>WPS 缺失字体：<a href="https://cloud.adc.ink/#s/9HLRceDg">wps-fonts.zip</a></p></li></ul><h3 id="5-Gurb-启动项">5. Gurb 启动项</h3><p>主题包下载：<a href="https://www.gnome-look.org/browse?cat=109&amp;ord=latest">GRUB Themes</a></p><p><a href="https://github.com/shvchk">shvchk</a>/<strong><a href="https://github.com/shvchk/fallout-grub-theme">fallout-grub-theme</a></strong>：一个仿辐射外观的引导主题。</p><p>利用 Grub Customizer 调整 Gurb 主题和相关配置项：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:danielrichter2007/grub-customizer</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install grub-customizer</span><br></pre></td></tr></table></figure><h3 id="6-GDM-登录项">6. GDM 登录项</h3><p><a href="https://github.com/PRATAP-KUMAR">PRATAP-KUMAR</a>/<strong><a href="https://github.com/PRATAP-KUMAR/ubuntu-gdm-set-background">ubuntu-gdm-set-background</a></strong>：修改登录页面的背景图。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -q https://raw.githubusercontent.com/PRATAP-KUMAR/ubuntu-gdm-set-background/main/ubuntu-gdm-set-background &amp;&amp; chmod +x ubuntu-gdm-set-background</span><br></pre></td></tr></table></figure><figure class="highlight shell"><figcaption><span>使用举例</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo ./ubuntu-gdm-set-background --image /home/user/backgrounds/image.jpg</span><br></pre></td></tr></table></figure><h2 id="五、资料">五、资料</h2><h3 id="1-主题图标字体">1. 主题图标字体</h3><p>安装目录有两种，区别上类似于 Windows 环境变量里的个人和系统。</p><ol><li>主题存放目录：<code>/usr/share/themes</code> 或 <code>~/.themes</code></li><li>图标存放目录：<code>/usr/share/icons</code> 或 <code>~/.icons</code></li><li>字体存放目录：<code>/usr/share/fonts</code> 或 <code>~/.fonts</code></li></ol><p>其中 <em>/usr/share</em> 目录需要 root 权限才能修改，可以对文件管理提权后打开：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nautilus</span><br></pre></td></tr></table></figure><h3 id="2-Node-js-Hexo">2. Node.js | Hexo</h3><ul><li>安装 NVM ：<code>wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code></li><li>安装 Node：<code>nvm install stable</code></li><li>安装 Hexo：<code>npm install -g hexo-cli</code></li></ul><h3 id="3-Git-配置">3. Git 配置</h3><ul><li>配置用户名：<code>git config --global user.name &quot;Your Name&quot;</code></li><li>配置邮箱：<code>git config --global user.email &quot;email@example.com&quot;</code></li><li>测试 Github 联通：<code>ssh -T git@github.com</code></li><li>将公钥提取出来命名为：<code>authorized_keys</code> 扔到服务器的 <code>~/.ssh</code> 目录就可以免密登录</li><li>访问远程主机：<code>ssh 用户名@域名/IP</code></li></ul><h3 id="4-应用图标存储位置">4. 应用图标存储位置</h3><p><code>/usr/share/applications</code> # 大部分启动图标都在此</p><p><code>~/.local/share/applications</code> # 一部分本地图标</p><p><code>/var/lib/snapd/desktop/applications</code> # snap 类软件在此</p><p>对于 *<em>.desktop</em> 文件，可以使用文本编辑器对图标或名称之类的进行修改。</p><h3 id="5-环境变量的写法">5. 环境变量的写法</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH=$PATH:变量1:变量2:变量3</span><br></pre></td></tr></table></figure><h2 id="六、展示">六、展示</h2><div class="note info blue"><p>个人用操作系统展示页面。</p></div><p><img src="../../img/article/23-03@Ubuntu22.04%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/image-20230327183137043.png" alt="桌面"></p><p><img src="../../img/article/23-03@Ubuntu22.04%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/image-20230327183205998.png" alt="概览"></p><p><img src="../../img/article/23-03@Ubuntu22.04%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/image-20230327183643608.png" alt="本文编辑环境"></p><p><img src="../../img/article/23-03@Ubuntu22.04%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/image-20230327184116430.png" alt="一些窗口"></p><p><img src="../../img/article/23-03@Ubuntu22.04%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/20230327-183345-785x618.png" alt="仿 Windows11 风格的开始菜单"></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>该页面提供了对应浏览器插件的下载地址，扩展名：GNOME Shell 集成。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>强烈建议为概览（OverView）页面添加，默认的黑色背景太丑了。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>一般情况下，主题提供的菜单图标为灰色，替换为彩色常规图标。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>可与 Dash to Dock 共用，在设置中勾选保留 Gnome Dash 即可。 <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>基于项目 <a href="https://github.com/abraunegg">abraunegg</a>/<strong><a href="https://github.com/abraunegg/onedrive">onedrive</a></strong>，第三方的 OneDrive Linux 客户端。 <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p>注意：夜灯状态不是指夜间模式，而是调整色温，位于：设置-显示器-夜灯。 <a href="#fnref6" class="footnote-backref">↩︎</a></p></li><li id="fn7" class="footnote-item"><p>通过该应用调整主题/图标/光标/字体/窗口等功能样式的设定。 <a href="#fnref7" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">归纳总结一些与 Ubuntu 22.04 装机/搭配相关的资料。</summary>
    
    
    
    <category term="资料" scheme="http://example.com/categories/%E8%B5%84%E6%96%99/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>双无线开关单击模拟双击实现</title>
    <link href="http://example.com/2023/02/22/2023/23-02@%E5%9F%BA%E4%BA%8E%E7%B1%B3%E5%AE%B6%E6%9E%81%E5%AE%A2%E7%89%88%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E5%8F%8C%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2023/02/22/2023/23-02@%E5%9F%BA%E4%BA%8E%E7%B1%B3%E5%AE%B6%E6%9E%81%E5%AE%A2%E7%89%88%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E5%8F%8C%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-02-22T14:22:00.000Z</published>
    <updated>2023-02-22T14:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>米家的无线开关有极速和标准两个模式，前者响应快，后者花样多。由于双无线开关拥有两个按键，所以自然而然的，为什么不能一个按键走极速响应，另一个按键走标准模式，允许单击、双击甚至更多。</p></blockquote><h2 id="一、基础信息">一、基础信息</h2><h3 id="1-1-前置条件">1.1 前置条件</h3><ul><li>网关（必须）：小米智能中枢网关；</li><li>开关：小米无线开关（双键版）；</li><li>小米无线开关操作模式设置为极速模式。</li></ul><h3 id="1-2-前置知识">1.2 前置知识</h3><p>【<strong>关于事件处理</strong>】</p><p>已知中枢网关处理触发事件（事件发生或状态更新类卡片）不是实时响应的，而是每隔一秒钟处理一次，对于开关而言，连续的点击行为相当于存进了一个先入先出的待处理队列中。</p><p>【<strong>关于延时卡片</strong>】</p><p>极客版中的延时卡片天生是一个防抖实现：每一次流程到达延迟卡片时其状态均会被重置，在延时未完前重复触发将推迟最终的结束时间；此外延时卡片没有中途停止功能，这点需要留意。</p><h2 id="二、设计思路">二、设计思路</h2><p>以按键的单击事件作为触发信号，利用『到达指定次数时』卡片区分实际按下次数，利用『自定义状态』卡片作为条件区分需要响应的分支路线，利用『延时』卡片在时间到达后作为执行信号，利用『当-如果-就』卡片根据执行信号和条件去执行具体真实的操作，这样整体就可以拆分成触发事件和状态条件两部分。</p><p><img src="../../img/article/23-02@%E5%9F%BA%E4%BA%8E%E7%B1%B3%E5%AE%B6%E6%9E%81%E5%AE%A2%E7%89%88%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E5%8F%8C%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB%E5%AE%9E%E7%8E%B0/%E7%BB%98%E5%9B%BE1.svg" alt="基础逻辑"></p><p>【<strong>触发事件</strong>】</p><p>主要用途：作为执行操作的时间信号，在用户按下开关的一定时间后触发任务的执行。</p><p>由于中枢网关不是实时响应，为了顺利的在一轮自动化中完整执行而不进入到下一轮判断，那么完整运行所需的总时间至少大于 （按下次数 - 1） 秒，以模拟三次按键点击举例，这个时间为至少两秒；另一方面在极客版中时间控制由延时卡片实现，结合其特性，实际效果为用户最后一次按下开关的两秒后开始执行。</p><p>最后一次开关按下后的相应秒数再去执行有些太慢了，这里就有两个优化思路：</p><ol><li>想办法不重置延时卡片的状态，保留第一次开关按下后的延时状态；</li><li>根据中枢网关特性，如果在一秒后没有出新的按下事件，就可以认为本轮按键已经结束。</li></ol><p><img src="../../img/article/23-02@%E5%9F%BA%E4%BA%8E%E7%B1%B3%E5%AE%B6%E6%9E%81%E5%AE%A2%E7%89%88%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E5%8F%8C%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB%E5%AE%9E%E7%8E%B0/%E5%BB%B6%E6%97%B6%E6%8E%A7%E5%88%B6.png" alt="延时控制"></p><p>【<strong>状态条件</strong>】</p><p>主要用途：区分实际的按下次数，输出一个布尔值用于执行操作前的判断。</p><p>无线开关按下后开始计数，自定义状态卡片未初始化时默认为假，利用下一次的计数到达否认上一次的计数状态，再将自己的状态置为真。</p><p><img src="../../img/article/23-02@%E5%9F%BA%E4%BA%8E%E7%B1%B3%E5%AE%B6%E6%9E%81%E5%AE%A2%E7%89%88%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E5%8F%8C%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB%E5%AE%9E%E7%8E%B0/%E7%8A%B6%E6%80%81%E6%8E%A7%E5%88%B6.png" alt="状态控制"></p><p>最后再结合上面的触发事件，在延时结束时再重置计数和自定义状态重置为假，那么可以得到这样的结果：</p><p><img src="../../img/article/23-02@%E5%9F%BA%E4%BA%8E%E7%B1%B3%E5%AE%B6%E6%9E%81%E5%AE%A2%E7%89%88%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E5%8F%8C%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB%E5%AE%9E%E7%8E%B0/%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB-%E6%94%B9%E8%BF%9B.png" alt="（图中最左侧的延时卡片为使整体排版整齐而设计，非必须）"></p><p>为了避免网络传输带来的延时，每个延时卡片加入了 50ms 的误差，这样我们就完成了单键对多键的模拟操作，单次按键最快在一秒后相应，而二三次按键能够在两秒后完成响应。</p><h2 id="三、案例分享">三、案例分享</h2><p>双线无线开关：一个按键走极速响应，另一个按键模拟三键。</p><p><img src="../../img/article/23-02@%E5%9F%BA%E4%BA%8E%E7%B1%B3%E5%AE%B6%E6%9E%81%E5%AE%A2%E7%89%88%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E5%8F%8C%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3%E5%8D%95%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%8F%8C%E5%87%BB%E5%AE%9E%E7%8E%B0/%E5%8F%8C%E9%94%AE%E6%97%A0%E7%BA%BF%E5%BC%80%E5%85%B3.png" alt="双键无线开关"></p>]]></content>
    
    
    <summary type="html">米家的无线开关有极速和标准两个模式，前者响应快，后者花样多。由于双无线开关拥有两个按键，所以自然而然的，为什么不能一个按键走极速响应，另一个按键走标准模式，允许单击、双击甚至更多。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="米家" scheme="http://example.com/tags/%E7%B1%B3%E5%AE%B6/"/>
    
    <category term="智能家居" scheme="http://example.com/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
  </entry>
  
  <entry>
    <title>米家自动化极客版使用指北</title>
    <link href="http://example.com/2023/02/02/2023/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/"/>
    <id>http://example.com/2023/02/02/2023/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/</id>
    <published>2023-02-01T17:00:00.000Z</published>
    <updated>2023-02-09T01:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、简介">一、简介</h2><p>可以预见的，在米家智能化这块儿，Zigbee 路线已被事实上放弃，米家新的产品路线转为蓝牙 Mesh。在这个背景下米家推出了小米智能中枢网关，官宣可同时连接 200 个蓝牙 Mesh 设备和 100 个蓝牙设备，同时部分自动化可本地运行，无需再走米家云端。本文提到的米家自动化极客版便是基于该中枢网关，目前拼多多上 260+ 可入手。</p><p>与米家客户端相比，极客版展示了智能家居的所有预设属性、方法和事件，同时支持查询、判断、逻辑运算等流程的处理能力，能实现很多原米家无法实现的功能。举一个简单的例子：不同时间段下的最大亮灯时间限制，即开灯后如果是白天，便一小时后关灯，反之两个小时关灯，在米家中，自动化事件只能以事件发生 + 状态条件 = 设备执行来操作，单个自动化中缺少 else 流程，同时状态条件也无法指定时间段，单一流程根本无法实现这种需求，但是在极客版中使用条件卡片就很容易实现。</p><p>极客版以卡片为主，主要分为事件和状态节点两类，通过在不同卡片间的节点连线完整自动化流程的设计，故虽然名为极客版，但总体上手难度还是很容易的。</p><h2 id="二、卡片">二、卡片</h2><h3 id="2-1-卡片类型">2.1 卡片类型</h3><p>极客版卡片的使用对我最大的感悟是，千万不能代入编程的思想。就好比它的条件卡片就是一个条件，它即使是判断那也是事件型的，只有信号的触发响应一说，下面挑出三个我认为需要留意的卡片展开讲讲。</p><h4 id="循环卡片">循环卡片</h4><p>循环卡片可按照设置时间循环发出信号，同时支持停止循环操作。一种使用场景是将不能作为触发的智能设备通过循环查询间接实现触发功能。比如米家的饮水机，我希望它能在水箱没水时提醒我一下，但是饮水机无法作为触发，那么就用循环查询来实现：</p><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/image-20230131144555230.png" alt="水箱缺水提醒"></p><p>由于目前极客版没有一个类似任务管理器的功能，循环卡片的使用还是要慎重，原则上尽量不用秒级循环，此外还可以在满足一定条件下减缓循环的进行，一个模拟示例：当循环连续触发三次后，停止循环运行，并在 30s 后开启循环。</p><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/%E5%BE%AA%E7%8E%AF%E6%B5%8B%E8%AF%951.png" alt="延迟循环触发"></p><h4 id="延时卡片">延时卡片</h4><p>使用延时卡片的时候曾想到一个问题：如果某个自动化很长，一次执行的所消耗的时间也很久，那么当该自动化二次触发时，上一次流程没有完全走完的情况下，第二次触发会放弃上一次流程中的未完节点直接重新开始吗？</p><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/image-20230202004226612.png" alt="延时测试"></p><p>正确答案是：极客版中的除计数外的余下状态类卡片，再次触发时会重置当前卡片的状态：循环会立即重置（不会说是再次创建一个循环即使上个循环没有停止），延时同样也会立即重置，同时由于延时没有停止一说，只能重置或走完，所以上图第一个延时被重置但还没走到第二个延时时，第二个延时会继续保留上一次的执行状态，存在听到两次滴滴的情况。</p><h4 id="自定义状态卡片">自定义状态卡片</h4><p>自定义状态卡片可以视为一个布尔类型的变量，相比于事件更常用于状态，可以记录储存一个值。作为状态使用时，如果没有初始化的话默认为假，如下图，音响会播放：哒哒。</p><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/%E6%B5%8B%E8%AF%95%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E7%8A%B6%E6%80%81-1675267875527-2.png" alt="测试：自定义状态"></p><h3 id="2-2-小技巧">2.2 小技巧</h3><h4 id="对循环卡片的改进">对循环卡片的改进</h4><p>上面的循环卡片的自动化实现了白天时最多三次的水箱缺水提醒，当然这样的循环设计很不优雅，如果再加入一个存在传感器会好很多：</p><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/image-20230131144756038.png" alt="用真实的人存在作为触发更实用"></p><h4 id="操控未被支持的设备">操控未被支持的设备</h4><p>由于极客版和米家是独立的，如果想操控不被支持的设备，那么可以尝试使用米家音响类设备，使用【智能音响-执行文本指令】静默执行相关命令（可在米家 App 中创建批量控制并分配通过小爱语音控制），其他的如果是不需要复杂流程的，还是可以继续丢给米家执行，不一定非要放到极客版里。</p><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/image-20230202010120870.png" alt="执行文本指令"></p><h4 id="外网访问米家极客版">外网访问米家极客版</h4><p>这个比较简单，虽然聊胜于无：映射任意端口到中枢网关地址的 80 端口，映射 8082 端口到中枢网关地址的 8082 端口。</p><h2 id="三、案例">三、案例</h2><h3 id="3-1-自动化亮灯">3.1 自动化亮灯</h3><p>基础功能实现：</p><ul><li>有人存在 + 环境光暗 = 开灯</li><li>无人持续 2 分钟 = 关灯</li></ul><p>额外功能实现：</p><ul><li>30 分钟内连续 3 次执行无人关灯，则下次关灯时延迟 10 分钟再关灯</li><li>如果灯不是通过该自动化打开的，则在触发无人 2 分钟下的 30 分钟后关灯</li></ul><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/image-20230209092454276.png" alt="客厅自动化亮灯"></p><h3 id="3-2-最大亮灯限制">3.2 最大亮灯限制</h3><p>根据时间段的最大亮灯时间限制，白天为 1 小时，夜晚为 2 小时，到时自动关灯。</p><p><img src="../../img/article/23-01@%E7%B1%B3%E5%AE%B6%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%81%E5%AE%A2%E7%89%88%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97/image-20230202011111289.png" alt="最大亮灯限制"></p><h2 id="四、结尾">四、结尾</h2><p>目前极客版的问题还不少，还有很多地方需要改进，大的方向是来说是未来可期吧。不过说回来貌似不少人是为了能本地执行自动化而买网关的，而我就只是单纯看上了复杂流程的编写能力上了，哈哈。</p>]]></content>
    
    
    <summary type="html">可以预见的，在米家智能化这块儿，Zigbee 路线已被事实上放弃，米家新的产品路线转为蓝牙 Mesh。在这个背景下米家推出了小米智能中枢网关，官宣可同时连接 200 个蓝牙 Mesh 设备和 100 个蓝牙设备，同时部分自动化可本地运行，无需再走米家云端。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="米家" scheme="http://example.com/tags/%E7%B1%B3%E5%AE%B6/"/>
    
    <category term="智能家居" scheme="http://example.com/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序获取昵称头像变更史</title>
    <link href="http://example.com/2022/12/16/2022/22-12@%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96%E6%98%B5%E7%A7%B0%E5%A4%B4%E5%83%8F%E5%8F%98%E6%9B%B4%E5%8F%B2/"/>
    <id>http://example.com/2022/12/16/2022/22-12@%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96%E6%98%B5%E7%A7%B0%E5%A4%B4%E5%83%8F%E5%8F%98%E6%9B%B4%E5%8F%B2/</id>
    <published>2022-12-16T04:00:00.000Z</published>
    <updated>2022-12-16T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="timeline"><div class="timenode"><div class="meta"><p><p>~</p></p></div><div class="body"><ul><li>使用 <code>wx.getUserInfo</code> 接口直接弹出授权框</li><li>使用 <code>open-data</code> 展示用户信息（无需用户授权）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2018年10月10日</p></p></div><div class="body"><ul><li><p>回收 <code>wx.getUserInfo</code> 直接弹出授权框</p><blockquote><p>推出微信登录能力的初衷是希望：当用户使用小程序时，可以便捷地使用微信身份登录小程序。但在实际使用场景中，我们发现：很多开发者在打开小程序时直接弹出授权框，如果用户点击拒绝授权，无法使用小程序。</p></blockquote></li></ul><p>改进后的结果：用户在没有任何操作的情况直接弹出授权的登录方式作废，需要点击组件后，才可以触发登录授权弹窗。</p></div></div><div class="timenode"><div class="meta"><p><p>2021年4月28日</p></p></div><div class="body"><ul><li><p>回收 <code>wx.getUserInfo</code> 接口</p></li><li><p>新增 <code>wx.getUserProfile</code> 接口</p><blockquote><p>很多开发者在打开小程序时就通过组件方式唤起 getUserInfo 弹窗，如果用户点击拒绝，无法使用小程序，这种做法打断了用户正常使用小程序的流程，同时也不利于小程序获取新用户。</p></blockquote></li></ul><p>改进后的结果：getUserInfo 接口作废，getUserProfile 接口可获取用户头像、昵称、性别及地区信息，每次通过该接口获取用户个人信息均需用户确认。</p><p><img src="../../img/article/22-12@%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96%E6%98%B5%E7%A7%B0%E5%A4%B4%E5%83%8F%E5%8F%98%E6%9B%B4%E5%8F%B2/0.png" alt="img"></p></div></div><div class="timenode"><div class="meta"><p><p>2021年10月20日</p></p></div><div class="body"><ul><li><p>小程序获取用户信息相关接口：不再返回用户性别及地区信息</p><blockquote><p>根据相关法律法规，为进一步规范开发者调用用户信息相关接口或功能，保障用户合法权益，平台将对用户信息相关功能及接口进行调整。</p></blockquote></li></ul><p>改进后的结果：</p><p><img src="../../img/article/22-12@%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96%E6%98%B5%E7%A7%B0%E5%A4%B4%E5%83%8F%E5%8F%98%E6%9B%B4%E5%8F%B2/0-1671160362192-3.png" alt="img"></p></div></div><div class="timenode"><div class="meta"><p><p>2022年2月21日</p></p></div><div class="body"><ul><li><p>回收通过 <code>&lt;open-data&gt;</code> 展示个人信息的能力</p><blockquote><p>开发者在未获取用户明示同意的情况下通过 <open-data>组件 在小程序中展示用户个人信息，用户容易误以为自己的个人信息在未授权的情况下，被小程序获取。</p></blockquote></li></ul><p>改进后的结果：<code>&lt;open-data&gt;</code> 作废：头像展示灰色头像，用户昵称展示“微信用户”，用户性别、地区、语言展示为为空。</p></div></div><div class="timenode"><div class="meta"><p><p>2022年11月8日</p></p></div><div class="body"><ul><li><p>回收 <code>wx.getUserProfile</code> 接口</p></li><li><p>新增「头像昵称填写能力」</p><blockquote><p>实践中发现有部分小程序，在用户刚打开小程序时就要求收集用户的微信昵称头像，或者在支付前等不合理路径上要求授权。如果用户拒绝授权，则无法使用小程序或相关功能。在已经获取用户的 openId 与 unionId 信息情况下，用户的微信昵称与头像并不是用户使用小程序的必要条件。</p></blockquote></li></ul><p>改进后的结果：仅剩下头像昵称填写能力可以获取用户昵称头像。</p><p><img src="../../img/article/22-12@%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%8E%B7%E5%8F%96%E6%98%B5%E7%A7%B0%E5%A4%B4%E5%83%8F%E5%8F%98%E6%9B%B4%E5%8F%B2/0-1671160724751-6.png" alt="img"></p></div></div></div><style>.timeline p.h2 {  padding-top: 0;}.article code:not([class]) {  background: #fff8e9;  margin: 0;}.article blockquote {  background: #ebdbdb;}</style> ]]></content>
    
    
    <summary type="html">微信小程序接口滥用与回收史。</summary>
    
    
    
    <category term="小程序" scheme="http://example.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="http://example.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>服务器调整概况</title>
    <link href="http://example.com/2022/12/04/2022/22-12@%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B0%83%E6%95%B4%E6%A6%82%E5%86%B5/"/>
    <id>http://example.com/2022/12/04/2022/22-12@%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B0%83%E6%95%B4%E6%A6%82%E5%86%B5/</id>
    <published>2022-12-04T03:00:00.000Z</published>
    <updated>2022-12-04T03:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、服务列表">一、服务列表</h2><h3 id="1-生活博客">1. 生活博客</h3><ul><li>生活类博客</li><li>域名：<a href="https://szyink.com">https://szyink.com</a></li><li>服务：Nginx + PHP + MariaDB(typecho)</li><li>部署：遵循宝塔面板网站和数据库备份流程</li></ul><h3 id="2-个人网盘">2. 个人网盘</h3><ul><li>可道云</li><li>域名：<a href="https://cloud.adc.ink">https://cloud.adc.ink</a></li><li>服务：Nginx + PHP + MariaDB(kodbox)</li><li>部署：遵循宝塔面板网站和数据库备份流程</li></ul><h3 id="3-检测服务">3. 检测服务</h3><ul><li>Uptime Kuma</li><li>域名：<a href="https://ut.adc.ink/">https://ut.adc.ink/</a></li><li>服务：Docker + Nginx</li><li>端口：8771</li><li>部署：<ul><li>镜像名称：louislam/uptime-kuma:latest</li><li>映射位置：/www/wwwroot/adc/uptime-kuma/</li><li>更新：<ul><li><ol><li>正常 Docker 更新流程</li></ol></li></ul></li></ul></li></ul><h3 id="4-搜索服务">4. 搜索服务</h3><ul><li><p>MeiliSearch</p></li><li><p>域名：<a href="https://search.szyink.com">https://search.szyink.com</a></p></li><li><p>服务：本地可执行文件 + Supervisord 进程守护</p></li><li><p>端口：8772</p></li><li><p>部署：</p><ul><li>项目位置：/opt/meilisearch/meilisearch</li><li>更新：<ul><li><ol><li>Github Releases 处下载最新版本 <em>meilisearch-linux-amd64</em></li></ol></li><li><ol start="2"><li>重新暂停/启动 Supervisord 中进程</li></ol></li></ul></li></ul></li><li><p><strong>备注</strong></p><p>MeiliSearch 未设计为向下兼容，直接更新可能失败，需要数据导出导入过程。</p><ul><li>导出存储</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -X POST <span class="string">&#x27;http://127.0.0.1:PORT/dumps&#x27;</span> -H <span class="string">&#x27;Authorization: Bearer MASTERKEY&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>导入存储（导入存储前需要删除 <em>/data.ms</em> 文件夹）</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./meilisearch --import-dump dumps/XXXXXXXX-XXXXXXXXXX.dump --master-key=<span class="string">&quot;MASTERKEY&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-评论服务">5. 评论服务</h3><ul><li>Artalk</li><li>域名：<a href="https://artalk.szyink.com">https://artalk.szyink.com</a></li><li>服务：本地可执行文件 + Supervisord 进程守护 + MariaDB(artalk)</li><li>端口：8773</li><li>部署：<ul><li>项目位置：/opt/artalk/artalk-go</li><li>更新：<ul><li><ol><li>Github Releases 处下载最新版本 <em>Source code(tar.gz)</em></li></ol></li><li><ol start="2"><li>解压后将 artalk-go 文件放在对应位置</li></ol></li><li><ol start="3"><li>重新暂停/启动 Supervisord 中进程</li></ol></li></ul></li></ul></li></ul><h3 id="6-统计服务">6. 统计服务</h3><ul><li>umami</li><li>域名：<a href="https://um.adc.ink">https://um.adc.ink</a></li><li>服务：编译部署 + Node + Nginx + MariaDB(umami)</li><li>端口：8774</li><li>部署：<ul><li>项目位置：/opt/umami/</li><li>更新：<ul><li><ol><li>拉取最新版本：<code>git pull</code></li></ol></li><li><ol start="2"><li>切换到最新分支：<code>git checkout tag</code></li></ol></li><li><ol start="3"><li>编译部署：<code>yarn install &amp;&amp; yarn build</code></li></ol></li><li><ol start="4"><li>启动服务：宝塔面板 -&gt; 网站 -&gt; Node 项目 -&gt; <em>start-env</em></li></ol></li></ul></li></ul></li></ul><h3 id="7-面板访问">7. 面板访问</h3><ul><li>BT</li><li>域名：<a href="https://waf.adc.ink">https://waf.adc.ink</a></li><li>服务：BT + Nginx</li><li>端口：8770</li></ul><h2 id="二、数据迁移">二、数据迁移</h2><p>使用了大半年的香港轻量云最终还是被舍弃了，原本只是为了访问外网更方便才购入的它，最后闲置成了鸡肋。虽然一开始在终端下直接 Ping 通谷歌时略有些激动，可实际使用时没太放置多少服务在服务器上，秉着精简原则，还是选择了销毁。</p><p><img src="../../img/article/22-12@%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B0%83%E6%95%B4%E6%A6%82%E5%86%B5/%E4%BA%91%E6%9C%8D%E5%8A%A1%E9%80%80%E6%AC%BE-%E8%85%BE%E8%AE%AF%E4%BA%91.png" alt="云服务退款-腾讯云"></p><p>意外的是，退款竟然是按照原价进行比例扣款，优惠券部分被算成真实金额了，整体退款金额比预想要高呀。提交申请后没过太久退款到腾讯云账户，然后再发起提现，原返。</p><h3 id="1-数据迁移">1. 数据迁移</h3><p>由于都是宝塔面板，数据迁移的过程中格外轻松，除了一个通过编译部署的 Node 站点失败外，其它站点都完美通过过去（包括了 Nginx 配置，数据库密码内容等等）。</p><p><img src="../../img/article/22-12@%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B0%83%E6%95%B4%E6%A6%82%E5%86%B5/%E4%B8%80%E9%94%AE%E8%BF%81%E7%A7%BB.png" alt="一键迁移"></p><p>占用最大的可能就是可道云了，整体迁移过去就很美滋滋。</p><h3 id="2-服务调整">2. 服务调整</h3><p>原本 HK 的轻量云肩负了 *<em>.szyink.com</em> 的泛域名证书申请，宝塔面板的 SSL 证书申请经常失败，现在迁移过去后懒得部署 ACME，所以只能把原先的泛域名解析拆分成单独的二级域名。之前为了偷懒从 CDN 到 Nginx 全设置成的泛域名有多轻松，现在单独拆开就有多麻烦：重新申请免费证书，新建 CDN 域名，完了还要独立设置防盗链、黑名单等等。</p><p>唯一的好消息是 <em>adc.ink</em> 这个域名是交给 Cloudflare 解析，这个 CDN 到服务器之间支持自签的 15 年证书就很舒服，要是狗腾讯也支持这个设定就好了，因为我服务器关掉了 80 端口，每次换证书还需要两边都得换。<svg class="iconfont emoji" aria-hidden="true"><use xlink:href="#icon-wuliao"></use></svg></p>]]></content>
    
    
    <summary type="html">秉着精简原则，退掉了腾讯云香港轻量云，目前所有服务就都挂在上海轻量云上了，本文记录迁移过程和目前所有已部署服务列表。</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="网站" scheme="http://example.com/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>uBlacklist：拯救你的搜索结果</title>
    <link href="http://example.com/2022/11/19/starred/22-11@%E8%BF%87%E6%BB%A4%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C/"/>
    <id>http://example.com/2022/11/19/starred/22-11@%E8%BF%87%E6%BB%A4%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C/</id>
    <published>2022-11-19T07:00:00.000Z</published>
    <updated>2023-02-03T03:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>不知你是否有这样的经历，在搜索引擎查找某一问题时，点击相应搜索结果时不是你所需甚至大相径庭的内容。比如你点进了一个 CSDN 的链接，出现的却是相似的重复内容，更有甚者直接是另一篇文章的链接；再比如点进去却发现内容排版糟糕、代码块缩减完全没有，页面侧栏、底栏又充斥着好长一串的猜你喜欢、推荐文章，仔细一看豁然是个采集站。</p><p>如果说这些还是小打小闹，那不知你是否遇到过云厂商的邀稿，许诺只要迁移文章就赠送优惠券云云，殊不知这类大厂权重高排名靠前，迁移后整个一搜索全是他们的内容，但内容上又容易和采集站一样排版欠佳。</p><h2 id="一、uBlacklist">一、uBlacklist</h2><p>中文搜索不知不觉间变的相当糟糕了，找不到需要的内容。一眼望去，相似、无关的内容又排在前列。有时候真的想对搜索结果进行过滤，把不喜欢/需要的内容去除，而这正是 uBlacklist 所做的事。</p><p>具体的说，uBlacklist 支持 Google, Bing, Brave 等搜索引擎的结果过滤，我们可以使用 <strong>匹配模式<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></strong> 或 <strong>正则表达式<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></strong> 对搜索结果进行过滤，直接拒绝查看低质量内容。其扩展下载地址为：</p><div class="tag link"><a class="link-card" title="uBlacklist" href="https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe?hl=zh-CN"><div class="left"><img src="/img/default/chrome.png"/></div><div class="right"><p class="text">uBlacklist</p><p class="url">https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe?hl=zh-CN</p></div></a></div><h2 id="二、过滤规则">二、过滤规则</h2><p>这里是一些常用的规则推荐，原则上排除名单因人而异，根据实际需求自行选取。</p><h3 id="1-基础屏蔽列表">1. 基础屏蔽列表</h3><ul><li>屏蔽 http 站点</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/(http:\/\/.*)/</span><br></pre></td></tr></table></figure><ul><li>屏蔽移动端（桌面端不看移动端排版内容！！！）</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/.*:\/\/(wap|m)\..*/</span><br></pre></td></tr></table></figure><ul><li>屏蔽搜索列表（点进去是一个搜索列表页面，鸡肋的一批）</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/.*\?q=.*/</span><br><span class="line">/.*\?s=.*/</span><br><span class="line">/.*\?keyword=.*/</span><br><span class="line">/.*collections\/.*\?.*/</span><br><span class="line">*://*/s/*</span><br><span class="line">*://*/so/*</span><br><span class="line">*://*/so.php</span><br><span class="line">*://*/informat/*</span><br><span class="line">*://*/zhuanti/*</span><br><span class="line">*://*/keyword/*</span><br><span class="line">*://*/*/searchList.jsp?*</span><br><span class="line">*://*/*dictionary?p=*</span><br></pre></td></tr></table></figure><ul><li>屏蔽云厂商文章（抓取类文章较多）</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*://cloud.tencent.com/developer/article/*</span><br><span class="line">*://developer.aliyun.com/article/*</span><br><span class="line">*://bbs.huaweicloud.com/blogs/*</span><br><span class="line">*://www.ucloud.cn/yun/*.html</span><br><span class="line">*://www.yisu.com/zixun/*</span><br><span class="line">*://www.huoban.com/news/post/*</span><br></pre></td></tr></table></figure><h3 id="2-激进屏蔽列表">2. 激进屏蔽列表</h3><ul><li>不会有博主以程序员/开发者当作网站名称的一部分吧？<br><em>可能误拦截形如『开发者平台』名称的网站</em></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title/^.*(程序员|开发者).*/</span><br></pre></td></tr></table></figure><ul><li>原则上大概率是采集站（存在误伤可能性）</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title/^.*(学习|学识|资讯|知识)$/</span><br></pre></td></tr></table></figure><ul><li>谷歌的搜索结果出现了好多繁体字结果，我有些不想看…</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/.*\.(hk|tw|taipei)\/.*/</span><br></pre></td></tr></table></figure><h3 id="3-讨厌的网站">3. 讨厌的网站</h3><ul><li>CSDN、简书、Gitee 的仓库推荐页</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*://*.csdn.net/*</span><br><span class="line">*://*.jianshu.com/*</span><br><span class="line">*://*.juejin.cn/*</span><br><span class="line">*://*.php.cn/*</span><br><span class="line">*://*.51cto.com/*</span><br><span class="line">*://*.gitee.com/explore/*</span><br></pre></td></tr></table></figure><ul><li>百家号、百度知道、搜狐、头条</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*://baijiahao.baidu.com/*</span><br><span class="line">*://zhidao.baidu.com/*</span><br><span class="line">*://wapiknow.baidu.com/*</span><br><span class="line">*://www.sohu.com/a/*</span><br><span class="line">*://www.toutiao.com/article/*</span><br></pre></td></tr></table></figure><ul><li>不看抖音视频、文章；番茄阅读最离谱：描述部分和搜索词相关，但点进去是小说。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*://*.douyin.com/video/*</span><br><span class="line">*://*.163.com/dy/article/*</span><br><span class="line">*://*.fanqienovel.com/page/*</span><br></pre></td></tr></table></figure><h2 id="三、终结内容农场">三、终结内容农场</h2><p>相对来说，uBlacklist 直接隐藏搜索结果，在不点击显示前无法查看被过滤的条目，这就需要过滤名单准确性较高，经常维护，但名单一长维护成本就很大，所以这里还可以搭配另一类浏览器插件：<a href="https://danny0838.github.io/content-farm-terminator/zh/">终结内容农场</a>。</p><p>终结内容农场更倾向于拦截链接、标识内容农场，它不会主动隐藏结果：</p><details yellow><summary> 内容农场拦截演示 </summary>              <div class='content'>              <p><img src="../../img/article/22-11@%E8%BF%87%E6%BB%A4%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C/image-20221118093232664.png" alt="内容农场拦截演示"></p>              </div>            </details><p>如上图，试图访问的网站为快懂百科，被插件的默认屏蔽列表拦截（<em>个人认为该网站不完全算是内容农场网站</em>），用户可以选择解锁查看网站内容的。但倘若是在 uBlacklist 的拦截名单中，那就真看不到这个结果啦。</p><p>两相搭配，效果更佳。<svg class="iconfont emoji" aria-hidden="true"><use xlink:href="#icon-ziya"></use></svg></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Mozilla/Add-ons/WebExtensions/Match_patterns">匹配模式</a>是一种指定网址组的方法：一个匹配模式匹配特定的一组 URL。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">正则表达式</a>是用于匹配字符串中字符组合的模式。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">uBlacklist 可以对搜索结果进行过滤，屏蔽不喜欢/需要的搜索内容，支持谷歌/必应等搜索引擎。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="浏览器扩展" scheme="http://example.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%A9%E5%B1%95/"/>
    
    <category term="过滤" scheme="http://example.com/tags/%E8%BF%87%E6%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>评论区表情包放大</title>
    <link href="http://example.com/2022/10/23/2022/22-09@%E8%AF%84%E8%AE%BA%E5%8C%BA%E8%A1%A8%E6%83%85%E5%8C%85%E6%94%BE%E5%A4%A7/"/>
    <id>http://example.com/2022/10/23/2022/22-09@%E8%AF%84%E8%AE%BA%E5%8C%BA%E8%A1%A8%E6%83%85%E5%8C%85%E6%94%BE%E5%A4%A7/</id>
    <published>2022-10-23T14:00:00.000Z</published>
    <updated>2022-10-24T15:05:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>一般情况下评论区的表情宽和高是固定显示，所以有些尺寸相对较大的表情包是缩放显示的，模糊不说还可能导致误解表情包的含义，本教程为表情图案添加了一个简单的放大弹出层，非常的实用。</p><h2 id="教程">教程</h2><p>其实实现的原理很简单，就是创建一个盒子，将表情包的内容放在盒子里面，再读取图片的 Alt 等描述属性现在在盒子中，最后控制盒子位置和显示隐藏即可。而在表情包放大逻辑方面，基本属性为：2 倍放大显示，最大显示宽高为 200px（如若超过，按比例对应缩小）。</p><p><img src="../../img/article/22-09@%E8%AF%84%E8%AE%BA%E5%8C%BA%E8%A1%A8%E6%83%85%E5%8C%85%E6%94%BE%E5%A4%A7/image-20220918193029346.png" alt="表情包逻辑"></p><h3 id="实现">实现</h3><p>具体到实现，就是利用 <code>observer</code> 观察评论区元素新增的节点，根据相关选择器过滤出含表情包的节点，添加对应的事件，以 Artalk 评论系统为例处理到的选择器为：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 放大项：</span></span><br><span class="line"><span class="comment"> * ① 表情包选择</span></span><br><span class="line"><span class="comment"> * ② 评论内容</span></span><br><span class="line"><span class="comment"> * ③ 预览窗（只有一张图）</span></span><br><span class="line"><span class="comment"> * ④ 预览窗（任意）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> dom = mutations[i].<span class="property">addedNodes</span></span><br><span class="line"><span class="keyword">if</span>(dom[<span class="number">0</span>]?.<span class="property">classList</span>?.<span class="title function_">contains</span>(<span class="string">&#x27;atk-grp&#x27;</span>)</span><br><span class="line">  || dom[<span class="number">0</span>]?.<span class="property">classList</span>?.<span class="title function_">contains</span>(<span class="string">&#x27;atk-comment-wrap&#x27;</span>)</span><br><span class="line">  || (!!dom[<span class="number">0</span>]?.<span class="property">attributes</span> &amp;&amp; !!dom[<span class="number">0</span>]?.<span class="property">attributes</span>[<span class="string">&#x27;atk-emoticon&#x27;</span>])</span><br><span class="line">  || (<span class="keyword">typeof</span> dom[<span class="number">0</span>]?.<span class="property">querySelector</span> === <span class="string">&#x27;function&#x27;</span> &amp;&amp; dom[<span class="number">0</span>]?.<span class="title function_">querySelector</span>(<span class="string">&#x27;img[atk-emoticon]&#x27;</span>))) &#123;</span><br><span class="line">  dom[<span class="number">0</span>].<span class="property">onmouseover</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的，如果是 Twikoo 评论系统，相应需要修改为：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> owo_body = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> dom = mutations[i].<span class="property">addedNodes</span></span><br><span class="line"><span class="keyword">if</span> (dom.<span class="property">length</span> == <span class="number">2</span> &amp;&amp; dom[<span class="number">1</span>].<span class="property">className</span> == <span class="string">&#x27;OwO-body&#x27;</span>) owo_body = dom[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dom.<span class="property">length</span> == <span class="number">1</span> &amp;&amp; dom[<span class="number">0</span>].<span class="property">className</span> == <span class="string">&#x27;tk-comment&#x27;</span>) owo_body = dom[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">continue</span></span><br><span class="line">owo_body.<span class="property">onmouseover</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//.......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码">代码</h3><details cyan><summary> JavaScript </summary>              <div class='content'>              <figure class="highlight js"><figcaption><span>以下代码适用于 Artalk，需要自行调用。</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表情包放大</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> target 表情包 DOM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showOwoBig</span>(<span class="params">target</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> ratio = <span class="number">2</span></span><br><span class="line">  <span class="keyword">const</span> maxLength = <span class="number">200</span></span><br><span class="line">  <span class="keyword">const</span> body = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#owo-big&#x27;</span>)) &#123;</span><br><span class="line">    div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#owo-big&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    div.<span class="property">id</span> = <span class="string">&#x27;owo-big&#x27;</span></span><br><span class="line">    body.<span class="title function_">appendChild</span>(div)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(<span class="function"><span class="params">mutations</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; mutations.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">let</span> flag = <span class="number">1</span></span><br><span class="line">      <span class="keyword">let</span> owoTime = <span class="number">0</span></span><br><span class="line">      <span class="keyword">const</span> dom = mutations[i].<span class="property">addedNodes</span></span><br><span class="line">      <span class="keyword">if</span>(dom[<span class="number">0</span>]?.<span class="property">classList</span>?.<span class="title function_">contains</span>(<span class="string">&#x27;atk-grp&#x27;</span>)</span><br><span class="line">          || dom[<span class="number">0</span>]?.<span class="property">classList</span>?.<span class="title function_">contains</span>(<span class="string">&#x27;atk-comment-wrap&#x27;</span>)</span><br><span class="line">          || (!!dom[<span class="number">0</span>]?.<span class="property">attributes</span> &amp;&amp; !!dom[<span class="number">0</span>]?.<span class="property">attributes</span>[<span class="string">&#x27;atk-emoticon&#x27;</span>])</span><br><span class="line">          || (<span class="keyword">typeof</span> dom[<span class="number">0</span>]?.<span class="property">querySelector</span> === <span class="string">&#x27;function&#x27;</span> &amp;&amp; dom[<span class="number">0</span>]?.<span class="title function_">querySelector</span>(<span class="string">&#x27;img[atk-emoticon]&#x27;</span>))) &#123;</span><br><span class="line">        dom[<span class="number">0</span>].<span class="property">onmouseover</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 如果需要只放大表情包可以添加  &amp;&amp; !!e.target.attributes[&#x27;atk-emoticon&#x27;]</span></span><br><span class="line">          <span class="keyword">if</span> (flag &amp;&amp; e.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;IMG&#x27;</span>) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            owoTime = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">const</span> alt = e.<span class="property">path</span>[<span class="number">0</span>].<span class="property">alt</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              <span class="keyword">const</span> clientHeight = e.<span class="property">path</span>[<span class="number">0</span>].<span class="property">clientHeight</span></span><br><span class="line">              <span class="keyword">const</span> clientWidth = e.<span class="property">path</span>[<span class="number">0</span>].<span class="property">clientWidth</span></span><br><span class="line">              <span class="keyword">if</span>(clientHeight &lt;= maxLength &amp;&amp; clientWidth &lt;= maxLength) &#123;</span><br><span class="line">                <span class="keyword">const</span> naturalHeight = e.<span class="property">path</span>[<span class="number">0</span>].<span class="property">naturalHeight</span></span><br><span class="line">                <span class="keyword">const</span> naturalWidth = e.<span class="property">path</span>[<span class="number">0</span>].<span class="property">naturalWidth</span></span><br><span class="line">                <span class="keyword">const</span> zoomHeight = clientHeight * ratio</span><br><span class="line">                <span class="keyword">const</span> zoomWidth = clientWidth * ratio</span><br><span class="line">                <span class="keyword">const</span> height = naturalHeight &gt; clientHeight ?  zoomHeight &lt; naturalHeight &amp;&amp; naturalHeight &lt; maxLength ? zoomHeight : naturalHeight : clientHeight</span><br><span class="line">                <span class="keyword">const</span> width = naturalWidth &gt; clientWidth ? zoomWidth &lt; naturalWidth &amp;&amp; naturalWidth &lt; maxLength ? zoomWidth : naturalWidth : clientWidth</span><br><span class="line">                <span class="keyword">let</span> tempWidth = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">let</span> tempHeight = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(width / height &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                  <span class="keyword">if</span>(width &gt;= maxLength) &#123;</span><br><span class="line">                    tempWidth = maxLength</span><br><span class="line">                    tempHeight = (height * maxLength) / width</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    tempWidth = width</span><br><span class="line">                    tempHeight = height</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">if</span>(height &gt;= maxLength) &#123;</span><br><span class="line">                    tempHeight = maxLength</span><br><span class="line">                    tempWidth = (width * maxLength) / height</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    tempWidth = width</span><br><span class="line">                    tempHeight = height</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">const</span> top = e.<span class="property">y</span> - e.<span class="property">offsetY</span></span><br><span class="line">                <span class="keyword">let</span>  left = (e.<span class="property">x</span> - e.<span class="property">offsetX</span>) - (tempWidth - e.<span class="property">path</span>[<span class="number">0</span>].<span class="property">clientWidth</span>) / <span class="number">2</span></span><br><span class="line">                <span class="keyword">if</span> ((left + tempWidth) &gt; body.<span class="property">clientWidth</span>) left -= ((left + tempWidth) - body.<span class="property">clientWidth</span> + <span class="number">10</span>)</span><br><span class="line">                <span class="keyword">if</span> (left &lt; <span class="number">0</span>) left = <span class="number">10</span></span><br><span class="line">                <span class="keyword">if</span> (alt !== <span class="string">&#x27;&#x27;</span>) tempHeight += <span class="number">10</span></span><br><span class="line">                div.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">`display:block;height:<span class="subst">$&#123;tempHeight+<span class="number">34</span>&#125;</span>px;width:<span class="subst">$&#123;tempWidth+<span class="number">34</span>&#125;</span>px;left:<span class="subst">$&#123;left&#125;</span>px;top:<span class="subst">$&#123;top&#125;</span>px;`</span>;</span><br><span class="line">                div.<span class="property">innerHTML</span> = <span class="string">`&lt;img src=&quot;<span class="subst">$&#123;e.target.src&#125;</span>&quot;&gt;&lt;p&gt;<span class="subst">$&#123;alt&#125;</span>&lt;/p&gt;`</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;, <span class="number">300</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        dom[<span class="number">0</span>].<span class="property">onmouseout</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          flag = <span class="number">1</span></span><br><span class="line">          div.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">          <span class="built_in">clearTimeout</span>(owoTime)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  observer.<span class="title function_">observe</span>(target, &#123; <span class="attr">subtree</span>: <span class="literal">true</span>, <span class="attr">childList</span>: <span class="literal">true</span> &#125;) <span class="comment">// 监听的 元素 和 配置项</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details cyan><summary> CSS </summary>              <div class='content'>              <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#owo-big</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#aaa</span> solid;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">105%</span>);</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">animation</span>: owoIn <span class="number">0.3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.42</span>, <span class="number">0</span>, <span class="number">0.3</span>, <span class="number">1.11</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#owo-big</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#owo-big</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> owoIn &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">95%</span>);</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">105%</span>);</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
    
    
    <summary type="html">为评论区的表情包添加一个放大弹出层，解决显示过小不清晰的问题。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Artalk" scheme="http://example.com/tags/Artalk/"/>
    
  </entry>
  
  <entry>
    <title>父选择器 :Has() 伪类</title>
    <link href="http://example.com/2022/09/18/2022/22-09@CSS%E4%B9%8B%E7%88%B6%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://example.com/2022/09/18/2022/22-09@CSS%E4%B9%8B%E7%88%B6%E9%80%89%E6%8B%A9%E5%99%A8/</id>
    <published>2022-09-18T15:00:00.000Z</published>
    <updated>2022-09-18T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>一般的，我们在选取子元素时可以使用 <code>a&gt;img</code> 这样的选择器，而反过来如果需要选择拥有图片的 <code>a</code> 元素，就只能通过 JavaScript 来实现了，不过现在就可以使用 has 选择器来实现这个需求。</p><p>准确的说，这个选择器很早就被提出，但是由于性能问题一直未曾实现，直到 22 年中旬才真正可以在浏览器使用，目前最新的 Chrome 和 Safari 均已默认支持，Firefox 开启实验支持后也能够使用，原则上已经可以稍稍使用一下了，当然生产环境的话估计还需要一两年才能无痛使用。</p><p><img src="../../img/article/22-10@CSS%E4%B9%8B%E7%88%B6%E9%80%89%E6%8B%A9%E5%99%A8/image-20221023214341753.png" alt="浏览器兼容性"></p><p>根据定义，给定的选择器参数相对于该元素（<code>:scope</code>）至少匹配一个元素，MDN 上的示例：匹配其后紧跟着 <code>&lt;p&gt;</code> 元素的 <code>&lt;h1&gt;</code> 元素：</p><figure class="highlight css"><figcaption><span>相当于有个 :scope 而非是 h1:has(h1 + p)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">:has</span>(+ <span class="selector-tag">p</span>) &#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择器参数可以使用所有的 CSS 选择符，在多个选择器时，组内是或的关系，例如 <code>h3:has(a, img)</code> 匹配的是有 <code>a</code> 标签或者 <code>img</code> 标签的 <code>h3</code> 元素。同时 <code>:has()</code> 伪类还可以和 <code>:checked</code>, <code>:enabled</code> 等混用，比如：</p><figure class="highlight css"><figcaption><span>当 .switch-input 被选择后更改 body 的背景色</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.switch-input</span><span class="selector-pseudo">:checked</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总而言之，<code>:has()</code> 能够用到的场景非常多，不过由于是最近被支持的新特性，也只能在个人环境下使用一二了，经典的拿来写样式去除页面不喜欢的元素，比如哔哩哔哩的个人动态页面，我希望屏蔽所有的除视频外的动态（一般是 UP 主推的广告）：</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 屏蔽除了投稿视频外的任何内容 */</span></span><br><span class="line"><span class="selector-class">.bili-dyn-list__item</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:has</span>(<span class="selector-tag">a</span><span class="selector-class">.bili-dyn-card-video</span>)) &#123;</span><br><span class="line">  <span class="attribute">display</span>: none</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><div class="tabs" id="tab-temp"><ul class="nav-tabs"><li class="tab active"><a class="#temp-1">点击按钮切换背景色</a></li><li class="tab"><a class="#temp-2">查看源码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="temp-1"><style>    #temp-body {      border-radius: 4px;      background-color: var(--color-site-body);    }    #temp-body:has(.switch-input:checked) {      background-color: #282c34;    }    #switch {      width: 80px;      margin: 0 auto;      padding: 100px 0;    }    .switch-input {      display: none;    }    .switch-label {      display: block;      width: 80px;      height: 40px;      border: 2px solid #ccc;      border-radius: 20px;      padding: 2px;      box-sizing: border-box;      cursor: url(https://static.szyink.com/common/cursor/pointer.png), pointer;    }    .switch-label::after {      display: block;      content: " ";      width: 50%;      height: 100%;      position: relative;      background-color: gray;      border-radius: 30px;      transition: all .3s ease-in;      left: 0;    }    .switch-input:checked + .switch-label::after {      left: 50%;    }  </style><div id="temp-body">  <div id="switch">    <input type="checkbox" id="switch-input" class="switch-input">    <label for="switch-input" class="switch-label"></label>  </div></div></div><div class="tab-pane" id="temp-2"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Has 兼容性测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span><span class="selector-pseudo">:has</span>(<span class="selector-class">.switch-input</span><span class="selector-pseudo">:checked</span>) &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#14171a</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.switch</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">300px</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.switch-input</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.switch-label</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.switch-label</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&quot; &quot;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-in;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.switch-input</span><span class="selector-pseudo">:checked</span> + <span class="selector-class">.switch-label</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;switch&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;switch-input&quot;</span> <span class="attr">class</span>=<span class="string">&quot;switch-input&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;switch-input&quot;</span> <span class="attr">class</span>=<span class="string">&quot;switch-label&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div>]]></content>
    
    
    <summary type="html">CSS :has() 伪类它来了！开发人员终于能在不依靠 JavaScript 的情况下定位父元素了！</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>使用 MeiliSearch 实现 Hexo 博客搜索</title>
    <link href="http://example.com/2022/09/02/2022/22-09@%E8%87%AA%E5%BB%BA%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    <id>http://example.com/2022/09/02/2022/22-09@%E8%87%AA%E5%BB%BA%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</id>
    <published>2022-09-02T15:00:00.000Z</published>
    <updated>2022-09-04T04:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录 MeiliSearch 的搭建及如何在 Hexo 博客上使用，原则上来说，MeiliSearch 在前端搜索上使用了公共开源的 <a href="https://github.com/algolia/instantsearch.js">instantsearch.js</a> 项目，这个项目是由 Aligolia 维护，所以在前端页面上的使用流程与 Aligolia 大差不差。在后端部署层面，MeiliSearch  作为一个 Rust 项目支持的操作系统很多，同时也支持一键部署至相应云服务中。</p><h2 id="一、部署">一、部署</h2><p>作为一个自部署搜索引擎，除了个人服务器外还支持部署到诸如 <a href="https://docs.meilisearch.com/learn/cookbooks/railway.html">Railway</a>, <a href="https://docs.meilisearch.com/learn/cookbooks/koyeb.html">Koyeb</a> 等这类云服务中，此部分查阅对应文档即可，本文侧重于个人服务器上的部署流程。</p><h3 id="1-程序安装">1. 程序安装</h3><p>根据官方提供的安装命令，在一个你喜欢的目录下执行如下命令。</p><figure class="highlight sh"><figcaption><span>本文中将程序存放于 opt/meilisearch 目录，下不赘述</span></figcaption><table><tr><td class="code"><pre><span class="line">curl -L https://install.meilisearch.com | sh</span><br></pre></td></tr></table></figure><blockquote><p>实际上脚本是在判断操作系统环境，然后去 <a href="https://github.com/meilisearch/meilisearch/releases">Github Releases</a> 下载对应的发行包，所以这里你可以手动下载你服务器所需发行包后自行上传至相关目录，最后将程序名称更改为 <em>meilisearch</em>  即可。</p></blockquote><h3 id="2-程序配置">2. 程序配置</h3><p>一些基础的命令行配置，摘自：<a href="https://docs.meilisearch.com/learn/configuration/instance_options.html#command-line-options-and-flags">Configure Meilisearch at launch</a></p><table><thead><tr><th>Command</th><th>CLI option</th><th>Remark</th></tr></thead><tbody><tr><td>自定义端口</td><td>–http-addr</td><td>更改程序端口</td></tr><tr><td>主密钥</td><td>–master-key</td><td>生产环境下必须配置，也可用来管理各类其他密钥</td></tr><tr><td>环境</td><td>–env</td><td>用于设置生产/开发环境，生产环境会关掉默认的 Web 搜索页面</td></tr><tr><td>分析</td><td>–no-analytics</td><td>MeiliSearch 会上传一定的分析数据，<a href="https://docs.meilisearch.com/learn/what_is_meilisearch/telemetry.html#exhaustive-list-of-all-collected-data">收集数据列表</a></td></tr></tbody></table><h3 id="3-反代运行">3. 反代运行</h3><p>宝塔面板的网站选项卡更新出了其他项目选项，一切以偷懒为目的，此处使用这里进行配置。</p><p>点击<strong>添加通用项目</strong>，填写相应内容，下列为执行命令一项的内容举例：</p><figure class="highlight sh"><figcaption><span>执行命令</span></figcaption><table><tr><td class="code"><pre><span class="line">/opt/meilisearch/meilisearch --http-addr <span class="string">&#x27;127.0.0.1:8772&#x27;</span> --master-key <span class="string">&#x27;xxxx&#x27;</span> --<span class="built_in">env</span> production --no-analytics</span><br></pre></td></tr></table></figure><blockquote><p>注：宝塔这里的停止项目按钮似乎有点问题，有时候只能停网站，程序却还在运行。<br>自行根据端口号查找后关闭吧：<code>sudo netstat -tunlp | grep 8772</code></p></blockquote><h2 id="二、数据集">二、数据集</h2><p><img src="../../img/article/22-09@%E8%87%AA%E5%BB%BA%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/document_structure.svg" alt="Diagram illustration Meilisearch's document structure"></p><p>类比的简单理解，MeiliSearch 里数据集合被称作 Documents，index 相当于表名，同时还需要一个 Primary key 区别数据。所以为了能在 Hexo 博客上使用该搜素引擎，流程就很明确了：</p><ol><li><p>在 MeiliSearch 中创建表 indexs；</p></li><li><p>准备博客的所有内容数据 Documents（json/ndjson/csv）;</p></li><li><p>设置需要搜索的内容。</p></li></ol><p>第 1 和 3 步调用 MeiliSearch 的相关接口即可，第 2 步的数据集合则需要我们自行准备，一般的该数据集合至少包含：<strong>标题</strong>、<strong>内容</strong>、<strong>地址</strong>以及 MeiliSearch 所需的<strong>主键</strong>。</p><h3 id="1-主键">1. 主键</h3><p>先解决主键，保证每篇文章拥有一个唯一值，秉着有现成就绝不自己写、能偷懒就偷懒的态度，找到了 <a href="https://github.com/chekun/hexo-uuid">chekun/hexo-uuid</a> 这个插件，安装后能够在 <code>post/page</code> 页面中自动生成 <code>uuid</code> 值。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-uuid</span><br></pre></td></tr></table></figure><div class="note warning"><p>注：hexo-uuid 实际上是使用 <code>uuid.v1()</code> 根据时间戳在 <code>before_renderPost</code> 阶段时生成写入。<br>对于 MeiliSearch，相同的主键在上传时视为更新，不同时视为新增。</p></div><h3 id="2-内容">2. 内容</h3><p>在本地搜索时，用到了 <a href="https://github.com/alexbruno/hexo-generator-json-content">hexo-generator-json-content</a>，按照其说明，改吧改吧配置可以直接拿过来给 MeiliSearch 使用，计划通 <svg class="iconfont emoji" aria-hidden="true"><use xlink:href="#icon-tiaopi"></use></svg>。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i hexo-generator-json-content</span><br></pre></td></tr></table></figure><p>安装完成插件后，至少需要修改配置文件为如下内容：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">jsonContent:</span> </span><br><span class="line">  <span class="attr">meta:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">pages:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">posts:</span> </span><br><span class="line">    <span class="attr">title:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">path:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">text:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">uuid:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这里的 uuid 便是上面 hexo-uuid 在文章中所生成的唯一值，事实上拿 <strong>hexo-abbrlink</strong> 所生成的 <code>abbrlink</code> 也不是说不可以，只要保证唯一性即可。</p><h3 id="3-推送">3. 推送</h3><p>在不修改默认设置的情况下，索引文件默认生成至 <code>/blog/public/content.json</code> 下。MeiliSearch 的上传接口为 <code>/indexes/&#123;index_uid&#125;/documents</code>，对应文档：<a href="https://docs.meilisearch.com/reference/api/documents.html#add-or-replace-documents">Add or replace documents</a>。</p><p>此处利用 Github Action 在每次部署完成时使用 curl 命令推送文件。</p><figure class="highlight sh"><figcaption><span>index 为 hexo，主键指定为 uuid</span></figcaption><table><tr><td class="code"><pre><span class="line">curl -X POST <span class="string">&#x27;https://yoursdomain.com/indexes/hexo/documents/?primaryKey=uuid&#x27;</span> \</span><br><span class="line">  -H <span class="string">&quot;Authorization: Bearer <span class="variable">$&#123;&#123;secrets.MEILISEARCH_KEY&#125;</span>&#125;&quot;</span> \</span><br><span class="line">  -H <span class="string">&quot;Content-Type: application/json&quot;</span> \</span><br><span class="line">  --data-binary <span class="string">&#x27;@public/content.json&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="三、主题适配">三、主题适配</h2><h3 id="1-引用文件">1. 引用文件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/@meilisearch/instant-meilisearch/dist/instant-meilisearch.umd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/instantsearch.js@4.44/dist/instantsearch.production.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-实例化">2. 实例化</h3><p>MeiliSearch 仅在 SearchClient 阶段有所不同：</p><figure class="highlight js"><figcaption><span>填入 MeiliSearch 服务端地址和 SearchKey</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> search = <span class="title function_">instantsearch</span>(&#123;</span><br><span class="line">  <span class="attr">indexName</span>: <span class="string">&#x27;instant_search&#x27;</span>,</span><br><span class="line">  <span class="attr">searchClient</span>: <span class="title function_">instantMeiliSearch</span>(</span><br><span class="line">    <span class="string">&#x27;https://integration-demos.meilisearch.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;99d1e034ed32eb569f9edc27962cccf90b736e4c5a70f7f5e76b9fab54d6a185&#x27;</span></span><br><span class="line">  ),</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>MeiliSearch 可以利用 <a href="https://docs.meilisearch.com/reference/api/keys.html#get-all-keys">/keys</a> 接口获取到 Default Search API Key。</p><p><img src="../../img/article/22-09@%E8%87%AA%E5%BB%BA%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/image-20220903114123344.png" alt="Default Search API Key"></p><h3 id="3-Widgets">3. Widgets</h3><p>部分 Widgets 些许不同，MeiliSerch 可能不支持，相关列表见：<a href="https://github.com/meilisearch/instant-meilisearch#table-of-widgets">Table Of Widgets</a></p><h2 id="四、其它">四、其它</h2><h3 id="1-索引主键">1. 索引主键</h3><p>其实索引主键还可以这样设置，简单粗暴的讲就是<strong>先删后传</strong>：不需要什么插件，直接使用 Hexo 的 <code>_id</code> 即可，然后上传前调用删除接口清空数据库（因为本身每次上传也是全量推送）。</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">jsonContent:</span> </span><br><span class="line">  <span class="attr">meta:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">pages:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">posts:</span> </span><br><span class="line">    <span class="attr">title:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">path:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">text:</span> <span class="literal">true</span> </span><br><span class="line">    <span class="attr">_id:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>Github Action</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Upload</span> <span class="string">json</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    curl -X DELETE &#x27;https://yoursdomain.com/indexes/hexo/documents&#x27; \</span></span><br><span class="line"><span class="string">        -H &quot;Authorization: Bearer $&#123;&#123;secrets.MEILISEARCH_KEY&#125;&#125;&quot;</span></span><br><span class="line"><span class="string">    curl -X POST &#x27;https://yoursdomain.com/indexes/hexo/documents&#x27; \</span></span><br><span class="line"><span class="string">        -H &quot;Authorization: Bearer $&#123;&#123;secrets.MEILISEARCH_KEY&#125;&#125;&quot; \</span></span><br><span class="line"><span class="string">        -H &quot;Content-Type: application/json&quot; \</span></span><br><span class="line"><span class="string">        --data-binary &#x27;@public/content.json&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="2-索引设置">2. 索引设置</h3><p>事实上，上传的字段共有四个，我们只需要对标题和内容进行搜索，另外两个不需要，相应接口文档：<a href="https://docs.meilisearch.com/reference/api/settings.html#update-searchable-attributes">Update searchable attributes</a>。</p><figure class="highlight sh"><figcaption><span>需要主密钥认证</span></figcaption><table><tr><td class="code"><pre><span class="line">curl -X PUT <span class="string">&#x27;https://search.szyink.com//indexes/hexo/settings/searchable-attributes&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxx&#x27;</span> \</span><br><span class="line">  --data-raw <span class="string">&#x27;[&quot;title&quot;, &quot;text&quot;]&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-Postman">3. Postman</h3><p>MeiliSearch 提供了一个 API 模板可以导入进 Postman 中，不然老用命令行多麻烦。</p><div class="tag link"><a class="link-card" title="Postman collection for Meilisearch" href="https://docs.meilisearch.com/learn/cookbooks/postman_collection.html#import-the-collection"><div class="left"><img src="/img/default/chrome.png"/></div><div class="right"><p class="text">Postman collection for Meilisearch</p><p class="url">https://docs.meilisearch.com/learn/cookbooks/postman_collection.html#import-the-collection</p></div></a></div><p><img src="../../img/article/22-09@%E8%87%AA%E5%BB%BA%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/image-20220903112249534.png" alt="更改对应参数"></p><h3 id="4-踩坑">4. 踩坑</h3><p>适配时最尝试过 <a href="https://github.com/meilisearch/docs-searchbar.js">docs-searchbar.js</a> 这个项目，他需要先利用 <a href="https://github.com/meilisearch/docs-scraper">docs-scraper</a> 抓取网站接口，然后在生成文档搜索。使用起来一言难尽，配置项特别少，很不灵活，强烈吐槽。</p>]]></content>
    
    
    <summary type="html">本地搜索需要加载文件，博文过多时即消耗流量又浪费时间，Algolia 方案成熟，但是社区版搜索次数有所限制，使用量上来后容易超额，如此自建搜索引擎 MeiliSearch 似乎就是个不错的选择了。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="宝塔" scheme="http://example.com/tags/%E5%AE%9D%E5%A1%94/"/>
    
    <category term="MeiliSearch" scheme="http://example.com/tags/MeiliSearch/"/>
    
  </entry>
  
  <entry>
    <title>自建个人网站数据统计分析系统</title>
    <link href="http://example.com/2022/06/29/2022/22-06@%E8%87%AA%E5%BB%BA%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/06/29/2022/22-06@%E8%87%AA%E5%BB%BA%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-06-28T21:30:00.000Z</published>
    <updated>2022-07-21T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>没有人喜欢自己的隐私数据被收集、被利用，也没有人喜欢自己被跨网站、跨设备的跟踪浏览行为、制作用户画像、精准投递广告。作为一个非商用的小站，是时候向诸如谷歌统计、百度统计、51La 等说再见了，只关注关键的几个数据，全程匿名化处理，隐私至上。</p><h2 id="一、Umami">一、Umami</h2><p>Umami 基于 Node.js 开发，支持 MySQL 和 Postgresql 数据库，除服务器外，它甚至可以部署在 Serverless 中。自部署的好处在于某些商业服务滥用用户数据，当数据保存在自己手中时可以确保不会分享给第三方（<em>如果你查阅 Umami 的数据库，你甚至可以发现它连用户 IP 都没有收集</em>）。</p><p>此外由于现有的商用统计分析系统过于臭名昭著，绝大部分隐私拦截插件（<em>如隐私獾</em>）都对其脚本进行了过滤，在保护了访客隐私的同时却导致了统计数据不精准，而 Umami 可以重写脚本名称及绑定用户自己的域名，最大程度上避免被误拦截（<em>因为本身不收集隐私、理直气壮</em>）。</p><p>你可以在 <a href="https://app.umami.is/share/ISgW2qz8/flightphp.com">🔗live demo</a> 处查看 Umami 所提供的功能示例。</p><h2 id="二、搭建说明">二、搭建说明</h2><p>基础环境：Ubuntu 20.04.4 LTS x86_64(Py3.7.9)，Node 16，宝塔面板，腾讯云香港轻量云。</p><p>Umami 支持 Docker 和源码部署两种方式吗，对我来说用源码走 Node 部署更熟悉。</p><h3 id="1-获取-umami">1. 获取 umami</h3><p>从 <a href="https://github.com/umami-software/umami/releases">umami/releases</a> 处克隆/下载发行包至网站。</p><h3 id="2-初始化数据库">2. 初始化数据库</h3><p>自行在宝塔面板数据库管理中创建数据库。</p><figure class="highlight bash"><figcaption><span>在 Umami 所在目录执行，导入数据库结构。</span></figcaption><table><tr><td class="code"><pre><span class="line">mysql -u 用户 -p 数据库名称 &lt; sql/schema.mysql.sql</span><br></pre></td></tr></table></figure><h3 id="3-配置环境">3. 配置环境</h3><figure class="highlight bash"><figcaption><span>在 Umami 所在目录创建该文件。</span></figcaption><table><tr><td class="code"><pre><span class="line">vim .<span class="built_in">env</span></span><br></pre></td></tr></table></figure><p>写入如下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DATABASE_URL=mysql://用户:密码@localhost:3306/数据库名称</span><br><span class="line">HASH_SALT=加盐</span><br><span class="line">TRACKER_SCRIPT_NAME=自定义脚本名称</span><br><span class="line">PORT=自定义服务器端口</span><br></pre></td></tr></table></figure><h3 id="4-编译构建">4. 编译构建</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="5-运行程序">5. 运行程序</h3><p>打开宝塔面板网站的 Node 项目，添加项目，根据你所存放程序的目录、端口填写具体内容。</p><div class="note warning"><p>使用自定义端口后，运行命令为 <code>npm run start-env</code></p></div><p><img src="../../img/article/22-06@%E8%87%AA%E5%BB%BA%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/image-20220629131802021.png" alt="宝塔面板网站配置"></p><h3 id="6-接入网站">6. 接入网站</h3><p>配置完成网站后打开，使用初始用户名密码登录 <code>admin:umami</code>。登录完成后可在右上角<strong>个人资料</strong>，<strong>更新密码</strong>处修改默认信息。接着<strong>个人资料</strong>，<strong>网站</strong>，<strong>添加网址</strong>处接入待统计的网站，如果勾选了<strong>启用共享链接</strong>，代表可以将该网站的统计数据分享给他人查看。</p><p>添加网站后，在网站列表的获取跟踪代码按钮处点击，复制具体内容到标签中，注：如果开启了自定义脚本名称，此处的链接文件需要手动替换。</p><h3 id="7-如何更新">7. 如何更新</h3><p>暂停网站，重复第 1, 3, 4 步骤后，重新启动网站即可。</p><h2 id="三、补充内容">三、补充内容</h2><h3 id="1-跟踪事件">1. 跟踪事件</h3><p>Umami 的自定义跟踪事件有些鸡肋，只能做到统计数量。支持两类：一是 CSS 类，也就是 <code>umami--&lt;event&gt;--&lt;event-name&gt;</code> 打标方式；另一种是在加载完成 Umami 文件后，提供了 <code>umami</code> 对象，可以调用一些方法，两种方式其实都挺勉强。</p><h3 id="2-优缺点">2. 优缺点</h3><p>Umami 在表结构上只记录了 country，所以在统计地图上只能以国家/地区为单位进行区别，作为一个中文博客，是一个不小的遗憾，不过此处应该归为设计如此。</p><h3 id="3-额外">3. 额外</h3><p><em>偷偷的讲，Umami 的地区地图里中国地图块有问题。💀</em></p>]]></content>
    
    
    <summary type="html">是时候向 Google Analytics 说再见了，免费、现代、美观、符合 GDPR 标准且支持自部署的 umami 闪亮登场。只关心重要指标：网页浏览量、使用的设备和以及访问者的来源，不使用 Cookie、不收集任何个人数据，也不存跨站点或跨设备跟踪，一切都是以隐私为中心的轻量化数据统计分析系统。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="隐私" scheme="http://example.com/tags/%E9%9A%90%E7%A7%81/"/>
    
    <category term="umami" scheme="http://example.com/tags/umami/"/>
    
  </entry>
  
  <entry>
    <title>Package Manager Proxy Settings</title>
    <link href="http://example.com/2022/06/28/2022/22-06@%E5%8C%85%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/"/>
    <id>http://example.com/2022/06/28/2022/22-06@%E5%8C%85%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</id>
    <published>2022-06-28T04:30:00.000Z</published>
    <updated>2022-06-28T04:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的包管理器想直接使用优秀的镜像仓库，请参考这个：<a href="https://github.com/eryajf/Thanks-Mirror">Thanks-Mirror</a></p><h2 id="pip">pip</h2><p>~/.config/pip/pip.conf</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">proxy=http://localhost:1087</span><br></pre></td></tr></table></figure><div class="note warning"><p>注意不支持 socks5。</p></div><h2 id="git">git</h2><h3 id="clone-with-ssh">clone with ssh</h3><p>在 文件 <code>~/.ssh/config</code> 后添加下面两行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line"><span class="comment"># Mac下</span></span><br><span class="line">ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p</span><br><span class="line"><span class="comment"># Linux下</span></span><br><span class="line">ProxyCommand nc --proxy-type socks5 --proxy 127.0.0.1:1080 %h %p</span><br></pre></td></tr></table></figure><div class="note warning"><p>注意 Linux 和 Mac 下 ncat/netcat 区别，详见：<br> <a href="https://unix.stackexchange.com/questions/368155/what-are-the-differences-between-ncat-nc-and-netcat">What are the differences between ncat, nc and netcat?</a></p></div><h3 id="clone-with-http">clone with http</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:1087</span><br></pre></td></tr></table></figure><div class="note warning"><p>建议使用 http，因为 socks5 在使用 git-lfs 时会报错。</p></div><h3 id="Reference">Reference</h3><p><a href="https://gist.github.com/laispace/666dd7b27e9116faece6">laispace/git 设置和取消代理</a></p><h2 id="cargo">cargo</h2><p>Cargo 会依次检查以下位置：</p><ol><li>环境变量 <code>CARGO_HTTP_PROXY</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> CARGO_HTTP_PROXY=http://127.0.0.1:1080</span><br></pre></td></tr></table></figure><ol start="2"><li><a href="https://doc.rust-lang.org/cargo/reference/config.html#hierarchical-structure">任意 <code>config.toml</code></a> 中的 <code>http.proxy</code></li></ol><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[http]</span></span><br><span class="line"><span class="attr">proxy</span> = <span class="string">&quot;127.0.0.1:1080&quot;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>环境变量 <code>HTTPS_PROXY</code> &amp; <code>https_proxy</code> &amp; <code>http_proxy</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:1080</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:1080</span><br></pre></td></tr></table></figure><p><code>http_proxy</code> 一般来讲没必要，除非使用基于 HTTP 的 Crate Repository。</p><p>Cargo 使用 libcurl，故可接受任何符合 <a href="https://everything.curl.dev/usingcurl/proxies">libcurl format</a> 的地址与协议。</p><p>( <code>127.0.0.1:1080</code> , <code>http://127.0.0.1:1080</code>, <code>socks5://127.0.0.1:1080</code> ）均可</p><h3 id="Reference-2">Reference</h3><p><a href="https://doc.rust-lang.org/cargo/reference/config.html#httpproxy">The Cargo Book - httpproxy</a></p><h2 id="apt">apt</h2><p>在 <code>/etc/apt/apt.conf.d/</code> 目录下新增 <code>proxy.conf</code> 文件，加入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Acquire::http::Proxy &quot;http://127.0.0.1:8080/&quot;;</span><br><span class="line">Acquire::https::Proxy &quot;http://127.0.0.1:8080/&quot;;</span><br></pre></td></tr></table></figure><p>如果希望使用 Socks5 代理，则加入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Acquire::http::Proxy &quot;socks5h://127.0.0.1:8080/&quot;;</span><br><span class="line">Acquire::https::Proxy &quot;socks5h://127.0.0.1:8080/&quot;;</span><br></pre></td></tr></table></figure><h3 id="Reference-3">Reference</h3><ul><li><a href="https://askubuntu.com/a/349765/883355">apt.conf &quot;Acquire::http:Proxy “proxyserver:port” seems not to be used</a></li><li><a href="https://github.com/lanlin/notes/issues/109">socks5 vs socks5h</a></li></ul><h2 id="curl">curl</h2><p>添加至 <code>~/.curlrc</code>。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socks5 = <span class="string">&quot;127.0.0.1:1080&quot;</span></span><br></pre></td></tr></table></figure><h2 id="gradle">gradle</h2><p>添加至 <code>~/.gradle/gradle.properties</code>。</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">systemProp.http.proxyHost</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="attr">systemProp.http.proxyPort</span>=<span class="string">1087</span></span><br><span class="line"><span class="attr">systemProp.https.proxyHost</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="attr">systemProp.https.proxyPort</span>=<span class="string">1087</span></span><br></pre></td></tr></table></figure><h3 id="Reference-4">Reference</h3><p><a href="https://stackoverflow.com/questions/5991194/gradle-proxy-configuration">Gradle proxy configuration</a></p><h2 id="Maven">Maven</h2><p>添加至 <code>%Maven 安装目录%/conf/settings.xml</code>。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">proxy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>proxy<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">active</span>&gt;</span>true<span class="tag">&lt;/<span class="name">active</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">protocol</span>&gt;</span>http<span class="tag">&lt;/<span class="name">protocol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span>&gt;</span>127.0.0.1<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>1087<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">proxy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Reference-5">Reference</h3><p><a href="https://maven.apache.org/guides/mini/guide-proxies.html">Guide-proxies</a></p><h2 id="go">go</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HTTP_PROXY=socks5://localhost:1080 go get</span><br></pre></td></tr></table></figure><div class="note warning"><p>测试了下 HTTPS_PROXY和 ALL_PROXY 都不起作用，或可使用：<a href="https://goproxy.io/">goproxy.io</a></p></div><h2 id="npm">npm</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> proxy http://127.0.0.1:1087</span><br><span class="line">npm config <span class="built_in">set</span> https-proxy http://127.0.0.1:1087</span><br></pre></td></tr></table></figure><div class="note warning"><p>用 socks5 就报错。<br>推荐使用 yarn，npm 是真的慢。</p></div><h3 id="reference">reference</h3><ul><li><a href="https://stackoverflow.com/questions/7559648/is-there-a-way-to-make-npm-install-the-command-to-work-behind-proxy">Is there a way to make npm install (the command) to work behind proxy?</a></li><li><a href="https://antfu.me/posts/npm-binary-mirrors">NPM Binary 镜像配置</a></li></ul><h2 id="rustup">rustup</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:1080</span><br></pre></td></tr></table></figure><h2 id="yarn">yarn</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> proxy http://127.0.0.1:1087</span><br><span class="line">yarn config <span class="built_in">set</span> https-proxy http://127.0.0.1:1087</span><br></pre></td></tr></table></figure><div class="note warning"><p>不支持 socks5。</p></div><h3 id="Reference-6">Reference</h3><p><a href="https://github.com/yarnpkg/yarn/issues/3418">yarn需要像npm一样配置代理么？</a></p><h2 id="yarn2">yarn2</h2><p><a href="https://yarnpkg.com/">Yarn 2+ - Official</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> httpProxy http://127.0.0.1:1087</span><br><span class="line">yarn config <span class="built_in">set</span> httpsProxy http://127.0.0.1:1087</span><br></pre></td></tr></table></figure><div class="note warning"><p><strong>不支持全局设置</strong>，支持 socks5。</p></div><p>提示: 这个命令会修改项目目录下的 <code>.yarnrc.yml</code> 文件, 请留意不要把带有如</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">httpsProxy:</span> <span class="string">&quot;socks5://127.0.0.1:1080&quot;</span></span><br></pre></td></tr></table></figure><p>的代码提交到仓库, 以免造成麻烦。</p><details green><summary> 建议使用 npm 镜像而不是配置使用代理 </summary>              <div class='content'>              <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> npmRegistryServer https://127.0.0.1:1087</span><br></pre></td></tr></table></figure><p>注意: 此方法不适用于下载 yarn 官方插件!</p><p>yarn 的官方插件默认会从 GitHub(<a href="http://raw.githubusercontent.com">raw.githubusercontent.com</a>) 上下载，您可能依旧需要配置代理。</p>              </div>            </details><h3 id="Reference-7">Reference</h3><ul><li><a href="https://yarnpkg.com/configuration/yarnrc#httpProxy">yarn doc - httpProxy</a></li><li><a href="https://yarnpkg.com/configuration/yarnrc#httpsProxy">yarn doc - httpsProxy</a></li></ul><h2 id="gem">gem</h2><p>添加至 <code>~/.gemrc</code>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"># See &#x27;gem help env&#x27; for additional options.</span><br><span class="line">http_proxy: http://localhost:1087</span><br></pre></td></tr></table></figure><h2 id="brew">brew</h2><p>设置环境变量：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALL_PROXY=socks5://localhost:1080</span><br></pre></td></tr></table></figure><h2 id="wget">wget</h2><p>添加至 <code>~/.wgetrc</code>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use_proxy=yes</span><br><span class="line">http_proxy=127.0.0.1:1087</span><br><span class="line">https_proxy=127.0.0.1:1087</span><br></pre></td></tr></table></figure><h3 id="Reference-8">Reference</h3><p><a href="https://stackoverflow.com/questions/11211705/how-to-set-proxy-for-wget">How to set proxy for wget?</a></p><h2 id="snap">snap</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snap <span class="built_in">set</span> system proxy.http=<span class="string">&quot;http://127.0.0.1:1087&quot;</span></span><br><span class="line">sudo snap <span class="built_in">set</span> system proxy.https=<span class="string">&quot;http://127.0.0.1:1087&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Reference-9">Reference</h3><p><a href="https://askubuntu.com/questions/764610/how-to-install-snap-packages-behind-web-proxy-on-ubuntu-16-04#answer-1146047">How to install snap packages behind web proxy</a></p><h2 id="docker">docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo <span class="built_in">mkdir</span> -p /etc/systemd/system/docker.service.d</span><br><span class="line">$ sudo vim /etc/systemd/system/docker.service.d/proxy.conf</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">&quot;ALL_PROXY=socks5://localhost:1080&quot;</span></span><br><span class="line"></span><br><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line">$ sudo systemctl restart docker</span><br></pre></td></tr></table></figure><div class="note warning"><p>必须是 socks5，http 不生效</p></div><h2 id="electron">electron</h2><p>设置环境变量：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ELECTRON_GET_USE_PROXY=<span class="literal">true</span></span><br><span class="line">GLOBAL_AGENT_HTTPS_PROXY=http://localhost:1080</span><br></pre></td></tr></table></figure><h3 id="References">References</h3><ul><li><a href="https://www.electronjs.org/docs/latest/tutorial/installation#proxies">Advanced Installation Instructions</a></li><li><a href="https://github.com/gajus/global-agent/blob/v2.1.5/README.md#environment-variables">global-agent</a></li></ul><h2 id="wsl2">wsl2</h2><p>WSL2 环境下可以通过设置 <code>~/.vscode-server/server-env-setup</code> 脚本文件，设置开发环境的环境变量，使用代理。</p><p>WSL2 内环境访问 Win 下的代理程序端口代理(例子代码中 http 代理端口监听 17070)，因为子网地址每次启动都不一样，需要动态处理。</p><p>新建 <code>~/.vscode-server/server-env-setup</code> 文件，该文件会在 VSCode 启动 WSL 环境后被 <code>source</code>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WSL_HOST=$(sed -n &#x27;/^nameserver/p&#x27; /etc/resolv.conf | cut -d&#x27; &#x27; -f2)</span><br><span class="line">export http_proxy=http://$&#123;WSL_HOST&#125;:17070</span><br><span class="line">export https_proxy=$http_proxy</span><br><span class="line">export all_proxy=$http_proxy</span><br></pre></td></tr></table></figure><h3 id="References-2">References</h3><p><a href="https://code.visualstudio.com/docs/remote/wsl">Developing in WSL</a></p><h2 id="ssh">ssh</h2><p>VSCode SSH 后的环境不会使用本地界面 VSCode 内的代理设置，如果 SSH 主机没有默认网络链接或在墙内，会导致问题。</p><h3 id="SSH-主机无网络">SSH 主机无网络</h3><p>需要手动下载 vscode 的 server 端传输部署，详情见链接：</p><ul><li><a href="https://stackoverflow.com/questions/56671520/how-can-i-install-vscode-server-in-linux-offline">How can I install vscode-server in linux offline [duplicate]</a></li><li><a href="https://gist.github.com/b01/0a16b6645ab7921b0910603dfb85e4fb">download-vs-code-server.sh</a></li></ul><h3 id="SSH-主机在墙内">SSH 主机在墙内</h3><p>虽然文档未提及，但是可以使用 WSL 模式的方案。</p><p>SSH 主机有代理程序监听在 17070 端口：</p><p>新建 <code>~/.vscode-server/server-env-setup</code> 文件，该文件会在 VSCode 启动 WSL 环境后被 <code>source</code>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export http_proxy=http://127.0.0.1:17070</span><br><span class="line">export https_proxy=$http_proxy</span><br><span class="line">export all_proxy=$http_proxy</span><br></pre></td></tr></table></figure><h3 id="References-3">References</h3><p><a href="https://code.visualstudio.com/docs/remote/ssh">Remote Development using SSH</a></p><h2 id="scoop">scoop</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scoop config proxy 127.0.0.1:1080</span><br></pre></td></tr></table></figure><h3 id="Reference-10">Reference</h3><p><a href="https://github.com/ScoopInstaller/Scoop/wiki/Using-Scoop-behind-a-proxy#configuring-scoop-to-use-your-proxy">Using Scoop behind a proxy</a></p>]]></content>
    
    
    <summary type="html">记录各个包管理器代理设置坑点，如：pip, git, apt, curl, npm, etc...</summary>
    
    
    
    <category term="资料" scheme="http://example.com/categories/%E8%B5%84%E6%96%99/"/>
    
    
    <category term="Proxy" scheme="http://example.com/tags/Proxy/"/>
    
  </entry>
  
  <entry>
    <title>Artalk 评论系统推荐</title>
    <link href="http://example.com/2022/05/25/2022/22-05@%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%8E%A8%E8%8D%90%E4%B9%8BArtalk/"/>
    <id>http://example.com/2022/05/25/2022/22-05@%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%8E%A8%E8%8D%90%E4%B9%8BArtalk/</id>
    <published>2022-05-25T07:30:00.000Z</published>
    <updated>2023-01-07T03:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在我看来，Artalk 真正吸引我的点在于拥有独立的『通知中心』，评论内容不再是孤单的只与具体的页面存在联系。无论是访客还是管理员，拥有了一个统一的页面去管理所有的评论，同时它也能提醒用户未读消息的数目，在邮件通知之外又多了一层消息提醒能力，属于网站本身的通知。</p></blockquote><p><em><strong>本文为杂谈</strong> 💭</em></p><h2 id="一、前言">一、前言</h2><p>以自托管评论系统来说，Artalk 是我使用的第三个评论系统，前两者是 Valine，Twikoo。Valine 后期闭源再加上存在严重的安全问题，被放弃了；Twikoo 倒是还好，不过相比较来说 Artalk 可以自行部署更吸引到我，而且该说不说腾讯云云开发的数据库用着不太顺手，文档型数据库终归没 MySql 熟悉。</p><p>以上为前提，Artalk 的后端支持两种部署方式：Docker 运行和可执行程序运行。由于应用程序为单文件且没什么环境需求，为了方（tou）便（lan）我这边使用了可执行程序的方式部署，利用 Supervisor 作持久化运行，数据库连接本地的 MariaDB（还可以搭上宝塔面板的自动备份快车）。</p><p>接下来是数据迁移，事实上我最初的迁移过程中面临了不少麻烦，But 人家 Artalk 的作者更新快，这期间迭代了不少版本的说。不过数据都存储到数据库中了，手撸 SQL 也不是说不行。比如因 Jsdelivr 的 ICP 备案被取消造成的历史表情访问失败的这类问题，就可以直接替换修改啦：</p><p><img src="../../img/article/22-05@%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%8E%A8%E8%8D%90%E4%B9%8BArtalk/image-20220526235210557.png" alt="简单粗暴的替换成文字"></p><p>Artalk 前后端分离，后端 Go 语言不会，没学过不作研究，但是！我可以自行调用后端提供的 Api，例如博客首页的热门文章/热评文章/最新评论这个侧边栏卡片的实现；前端这类 TypeScript 的到可以上下其手。所以事实上本博引用的前端样式是稍作修改的，以去线留白为核心，按照个人喜好修改了一小部分样式呈现。</p><h2 id="二、推荐">二、推荐</h2><p>So，Artalk 我也用了有那么一阵子了，这里推荐下它与别的评论系统最大不同的点吧。</p><h3 id="2-1-通知中心">2.1 通知中心</h3><p>我将其视为自托管评论系统中的史诗级更新，一般来说，这类评论系统大都为匿名评论，至多需要访客提供昵称/邮箱而已，所以评论的提醒功能也自然而然的落在了邮件通知上，但这种提醒可以说是和网站本身隔离的，而且评论也只与页面相关联，如果遗漏/忘记了通知用的邮件，访客能否得知评论的回复与否完全落在了是否再次访问相关页面。而以腾讯邮箱为例，开启了会话模式后，同一邮件地址的邮件信息合并在一个页面里，历史信息折叠显示，曾经有那么几次由于折叠缘故，遗漏过邮件的查阅（它被设置为已读了）。</p><p>而 Artalk 的评论中心提供了全站评论管理能力，无论是访客还是管理员均可查看，同时它还拥有未读消息数目的小徽标。可以说这个评论中心是与网站正相关的，各个页面的评论由它被组织起来，联系到一起。此外，未来 Artalk 在提供获取未读消息的 API 后，我们甚至可以做到在进入的网站的第一刻，自行查询实现用户欢迎，提示查阅未读消息等。</p><h3 id="2-2-后端控制前端">2.2 后端控制前端</h3><p>这里指的是，可以在后端覆写前端的配置。众所周知，Hexo 的渲染部署速度一直蛮受诟病，如果因需要修改评论的相关配置而去走一遍部署实在是略显麻烦了。以本博为例，从提交到最终部署，Github Action 大约需要 4-10 分钟左右。而倘若只是修改后端配置文件，就只需要重启一次程序即可。</p><h3 id="2-3-前端资源文本">2.3 前端资源文本</h3><p>Artalk 后端同时提供了前端所需的 JS/CSS 文件，且这个文件百分百前后端版本匹配，所以博客引用前端文件时，直接使用后端提供的地址，如此 Artalk 的升级便只需要关心后端的升级了。</p><h3 id="2-4-图片上传管理">2.4 图片上传管理</h3><p>目前来说，Artalk 存在两类上传方式，前端上传和后端上传。后端上传进服务器目录（也可通过 Upgit 再从后端上传至它处）。当然这里我想表达的是，你可以将评论产生的图片管理在你的服务器中，起码能够避免图源失效的可能性。</p><h3 id="2-5-多站点-多管理员">2.5 多站点/多管理员</h3><p>字面意思，支持多个网站，同时每个网站的管理员互相独立，另外还有一个全局管理员。</p><h2 id="三、自定义">三、自定义</h2><p>本站所用评论在样式上稍作修改，如有需求，将相关引用资源替换为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- css: https://o.static.szyink.com/storage/artalk/Artalk.css</span><br><span class="line">- js: https://o.static.szyink.com/storage/artalk/Artalk.js</span><br></pre></td></tr></table></figure><p>与原版的差异项如下：</p><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>自带一个表情放大功能</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>表情弹窗显示</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>控制中心弹窗显示</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>部分样式修订</p>            </div>]]></content>
    
    
    <summary type="html">在我看来，Artalk 真正吸引我的点在于拥有独立的『通知中心』，评论内容不再是孤单的只与具体的页面存在联系。无论是访客还是管理员，拥有了一个统一的页面去管理所有的评论，同时它也能提醒用户未读消息的数目，在邮件通知之外又多了一层消息提醒能力，属于网站本身的通知。</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="Artalk" scheme="http://example.com/tags/Artalk/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序之订阅消息</title>
    <link href="http://example.com/2022/05/05/starred/21-05@%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E8%AE%A2%E9%98%85%E6%B6%88%E6%81%AF/"/>
    <id>http://example.com/2022/05/05/starred/21-05@%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E8%AE%A2%E9%98%85%E6%B6%88%E6%81%AF/</id>
    <published>2022-05-05T15:09:56.000Z</published>
    <updated>2022-06-17T17:09:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>这是一篇我鸽了很久的文章，从最初的 5 月 5 日开写，一直拖到近日才算完成。虽然主观原因是人懒，但客观原因不还是有嘛，这重新备案很费时间的啊喂~</em></p><p>言归正传，写这篇文章主要是在使用小程序发送订阅消息时却是踩了不少坑，按照原有的系统设计，是打算将其按照一个常用的消息通知渠道使用的。但是事实上，小程序的消息通知在次数上存在限制，<em>一次授权、一次发送</em>。自然无法实现持久化通知。后来的解决方案是在每个页面作权限校验，诱导（<strong>强制</strong>）用户勾选保持选择，不再询问巴拉巴拉，说人话就是你不给我权限我这边就疯狂跳转弹申请。</p><p>通过微信的 Api 我们可以获取到以上这些信息，当发现了不满足条件的时候就各种弹窗恶心用户就好了（终于活成了自己讨厌的样子淦）。以上操作在理想情况下就是：如果我们亲爱的用户勾选了保持选择，那么对用户来说之后的权限确认过程是无感的，进而在服务端发送消息时就不会出现由于权限次数不足而失败的情况了。</p><h2 id="一、基础知识">一、基础知识</h2><div class="note quote"><p><strong>订阅消息</strong></p><p>消息能力是小程序能力中的重要组成，我们为开发者提供了订阅消息能力，以便实现服务的闭环和更优的体验。</p><ul><li>订阅消息推送位置：服务通知</li><li>订阅消息下发条件：用户自主订阅</li><li>订阅消息卡片跳转能力：点击查看详情可跳转至该小程序的页面</li></ul></div><p>订阅消息有两种类型：<strong>一次性订阅消息</strong> 和 <strong>长期订阅消息</strong> ，长期性订阅消息仅向政务民生、医疗、交通、金融、教育等线下公共服务开放，一般用户无法申请到。本文着重于一次性订阅，按照官网文档中的定义：</p><p>一次性订阅消息用于解决用户使用小程序后，后续服务环节的通知问题。用户自主订阅后，开发者可不限时间地下发一条对应的服务消息；每条消息可单独订阅或退订。</p><p>服务端通过调用 <code>subscribeMessage.send</code> 接口发送消息，对于服务端来说，也只能做到调用 Api ，然后接收到返回值。客户端通过 <code>requestSubscribeMessage</code> 调出权限申请，通过 <code>getSetting</code> 进行权限确认。</p><h2 id="二、逻辑实现">二、逻辑实现</h2><p>需要实现的效果是这样的，把只有一次性订阅消息当成持久的消息通知渠道来使用。</p><p>这里说下小程序的额外设定，小程序拥有登录和自动登录能力。我将第一次授权放到了等候完成之后的回调里进行，将消息通知的权限检查放到了自动登录的完成回调中。</p><div class="img-wrap"><div class="img-bg" style="background:var(--color-white-png)"><img class="img" src="../../img/article/21-05@微信小程序之订阅消息/wechat.svg" alt="大概是这样吧" style="height:600px;"/></div><span class="image-caption">大概是这样吧</span></div><h2 id="三、代码实现">三、代码实现</h2><div class="tabs" id="tab-wechat"><ul class="nav-tabs"><li class="tab active"><a class="#wechat-1">订阅消息</a></li><li class="tab"><a class="#wechat-2">权限检测</a></li><li class="tab"><a class="#wechat-3">权限设置</a></li></ul><div class="tab-content"><div class="tab-pane active" id="wechat-1"><figure class="highlight js"><figcaption><span>订阅消息 subscribeMessage 调用</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; tmplIds 模板 id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; done 成功回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">subscribeMessage</span>: <span class="keyword">function</span> (<span class="params">tmplIds, done = <span class="literal">null</span></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> that = <span class="variable language_">this</span>;</span><br><span class="line">  wx.<span class="title function_">requestSubscribeMessage</span>(&#123;</span><br><span class="line">    <span class="attr">tmplIds</span>: tmplIds,</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      tmplIds.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res[item] !== <span class="string">&#x27;accept&#x27;</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;消息通知没有订阅&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (done) <span class="title function_">done</span>(res);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">fail</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="comment">// 20004: 用户关闭了主开关，无法进行订阅,引导开启</span></span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">errCode</span> == <span class="number">20004</span>) &#123;</span><br><span class="line">        that.<span class="title function_">openSettingPage</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (done) <span class="title function_">done</span>(<span class="literal">false</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;申请订阅消息权限失败&#x27;</span>, res.<span class="property">errMsg</span>);</span><br><span class="line">        <span class="keyword">if</span> (done) <span class="title function_">done</span>(<span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="wechat-2"><figure class="highlight js"><figcaption><span>校验订阅信息（只在通过自动登录方式进入的才调用）</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">checkSubscribeMessage</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> that = <span class="variable language_">this</span>;</span><br><span class="line">  wx.<span class="title function_">getSetting</span>(&#123;</span><br><span class="line">    <span class="attr">withSubscriptions</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!!res.<span class="property">subscriptionsSetting</span>.<span class="property">mainSwitch</span>) &#123;</span><br><span class="line">        <span class="comment">// itemSettings 只在勾选了总是选择时返回</span></span><br><span class="line">        <span class="comment">// 如果此处没有结果，就再次申请订阅消息，如果勾选了</span></span><br><span class="line">        <span class="keyword">if</span> (!!res.<span class="property">subscriptionsSetting</span>.<span class="property">itemSettings</span>) &#123;</span><br><span class="line">          <span class="comment">// 此处处理勾选了总是选择的</span></span><br><span class="line">          <span class="comment">// 直接跳到设置里（因为订阅消息的弹窗已经弹不出来了）</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">of</span> that.<span class="property">globalData</span>.<span class="property">subscribeTmplIds</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (res.<span class="property">subscriptionsSetting</span>.<span class="property">itemSettings</span>[key] !== <span class="string">&#x27;accept&#x27;</span> &amp;&amp;</span><br><span class="line">              res.<span class="property">subscriptionsSetting</span>.<span class="property">itemSettings</span>[key] !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">              that.<span class="title function_">openSettingPage</span>(<span class="string">&#x27;您有一条或多条订阅消息勾选了禁止接收，建议您重新勾选，是否确认？&#x27;</span>);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 至少一条未勾选总是选择，弹窗权限窗口</span></span><br><span class="line">          <span class="keyword">if</span> (!that.<span class="property">globalData</span>.<span class="property">subscribeTmplIds</span>.<span class="title function_">every</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> res.<span class="property">subscriptionsSetting</span>.<span class="property">itemSettings</span>[item] !== <span class="literal">undefined</span></span><br><span class="line">            &#125;)) &#123;</span><br><span class="line">            wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">              <span class="attr">title</span>: <span class="string">&#x27;订阅消息&#x27;</span>,</span><br><span class="line">              <span class="attr">content</span>: <span class="string">&#x27;您有消息尚未勾选保持以上选择，建议您勾选，是否确认？&#x27;</span>,</span><br><span class="line">              <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                  that.<span class="title function_">subscribeMessage</span>(that.<span class="property">globalData</span>.<span class="property">subscribeTmplIds</span>);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 此处是尚未勾选总是选择</span></span><br><span class="line">          wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;订阅消息&#x27;</span>,</span><br><span class="line">            <span class="attr">content</span>: <span class="string">&#x27;为了确保您能接收到审核信息，建议您勾选总是保持以上选择，是否确认？&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                that.<span class="title function_">subscribeMessage</span>(that.<span class="property">globalData</span>.<span class="property">subscribeTmplIds</span>);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 此处是订阅消息总开关压根没开，直接跳转到设置页</span></span><br><span class="line">        that.<span class="title function_">openSettingPage</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="wechat-3"><figure class="highlight js"><figcaption><span>跳转到设置页面</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; str 消息通知</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; done 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">openSettingPage</span>: <span class="keyword">function</span> (<span class="params">str = <span class="string">&#x27;检测到您未开启订阅消息开关，是否开启？&#x27;</span>, done</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> that = <span class="variable language_">this</span>;</span><br><span class="line">  wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">    <span class="attr">content</span>: str,</span><br><span class="line">    <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">        wx.<span class="title function_">openSetting</span>(&#123;</span><br><span class="line">          <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">authSetting</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;订阅消息失败&#x27;</span>);</span><br><span class="line">        wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&#x27;您拒绝开启通知权限，将无法收取到相关信息&#x27;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">          <span class="attr">complete</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (done) <span class="title function_">done</span>();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></div></div></div><h2 id="四、额外内容">四、额外内容</h2><p>这部分与主旨无关，不过有趣。</p><div class="tabs" id="tab-other"><ul class="nav-tabs"><li class="tab active"><a class="#other-1">版本控制</a></li><li class="tab"><a class="#other-2">自动更新</a></li></ul><div class="tab-content"><div class="tab-pane active" id="other-1"><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">setGlobaUrl</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> url, env;</span><br><span class="line">  <span class="keyword">switch</span> (wx.<span class="title function_">getAccountInfoSync</span>().<span class="property">miniProgram</span>.<span class="property">envVersion</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;develop&#x27;</span>: <span class="comment">// 开发版</span></span><br><span class="line">      env = <span class="string">&#x27;develop&#x27;</span>;</span><br><span class="line">      url = <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">hostUrlList</span>.<span class="property">develop</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;trial&#x27;</span>: <span class="comment">// 体验版</span></span><br><span class="line">      env = <span class="string">&#x27;trial&#x27;</span>;</span><br><span class="line">      url = <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">hostUrlList</span>.<span class="property">trial</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;release&#x27;</span>: <span class="comment">// 正式版</span></span><br><span class="line">      env = <span class="string">&#x27;release&#x27;</span>;</span><br><span class="line">      url = <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">hostUrlList</span>.<span class="property">release</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      env = <span class="string">&#x27;release&#x27;</span>;</span><br><span class="line">      url = <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">hostUrlList</span>.<span class="property">release</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  wx.<span class="title function_">setEnableDebug</span>(&#123;</span><br><span class="line">    <span class="attr">enableDebug</span>: env !== <span class="string">&#x27;release&#x27;</span>,</span><br><span class="line">    <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 开发工具不提供此 Api</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">hostUrl</span> = url;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">env</span> = env;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="other-2"><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">autoUpdate</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取小程序更新机制兼容</span></span><br><span class="line">  <span class="keyword">if</span> (wx.<span class="title function_">canIUse</span>(<span class="string">&#x27;getUpdateManager&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">const</span> updateManager = wx.<span class="title function_">getUpdateManager</span>();</span><br><span class="line">    <span class="comment">//1. 检查小程序是否有新版本发布</span></span><br><span class="line">    updateManager.<span class="title function_">onCheckForUpdate</span>(<span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="comment">// 请求完新版本信息的回调</span></span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">hasUpdate</span>) &#123;</span><br><span class="line">        <span class="comment">//2. 小程序有新版本，则静默下载新版本，做好更新准备</span></span><br><span class="line">        updateManager.<span class="title function_">onUpdateReady</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;更新提示&#x27;</span>,</span><br><span class="line">            <span class="attr">content</span>: <span class="string">&#x27;新版本已经准备好，是否马上重启小程序？&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                <span class="comment">//3. 新的版本已经下载好，调用 applyUpdate 应用新版本并重启</span></span><br><span class="line">                updateManager.<span class="title function_">applyUpdate</span>()</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        updateManager.<span class="title function_">onUpdateFailed</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="comment">// 新的版本下载失败</span></span><br><span class="line">          wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;更新提示&#x27;</span>,</span><br><span class="line">            <span class="attr">content</span>: <span class="string">&#x27;新版本已经上线啦~，请您删除当前小程序，重新搜索打开。&#x27;</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">      <span class="attr">content</span>: <span class="string">&#x27;当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></div></div></div>]]></content>
    
    
    <summary type="html">本文记录了在使用订阅消息时所踩的坑，主要基于一次性订阅消息展开，涉及用户订阅状态判断，通知权限处理等。</summary>
    
    
    
    <category term="小程序" scheme="http://example.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="http://example.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>原生 JS 的右键菜单实现</title>
    <link href="http://example.com/2022/04/18/starred/22-04@%E5%8E%9F%E7%94%9FJS%E7%9A%84%E5%8F%B3%E9%94%AE%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2022/04/18/starred/22-04@%E5%8E%9F%E7%94%9FJS%E7%9A%84%E5%8F%B3%E9%94%AE%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-04-18T12:00:00.000Z</published>
    <updated>2022-05-25T01:16:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="img-wrap"><div class="img-bg"><img class="img" src="../../img/article/22-04@原生JS的右键实现/image-20220418232017851.png" alt="image" style="height:266px;"/></div></div><h2 id="一、前缘">一、前缘</h2><p>Volantis 的右键大体来说是我维护的，它的由来其实很有趣：当时是做了全局鼠标形状替换，但是在右键菜单展现时图标的修改被打回了原形，所以就萌生了替换掉右键菜单的想法。第一版的右键是仿照主题的菜单实现的，样式直接引用自菜单，功能上只是单纯的链接跳转。</p><p>后来 xaoxuu 觉得这个不错，就添加了顶部导航栏、音乐控制模块等，将自定义右键抽成了独立的功能，如此算是有了一个良好的开端；接着就是一些功能上的增减，主要围绕剪切板和内置事件展开；再后来 Volantis 开始去 JQ 化，右键也就跟着摘掉依赖，如此迭代后，才形成了目前主题内置的右键状态。</p><p>此时的右键菜单，所有的功能类按钮的事件实现全部内置，用户在配置方面只能做到新建一些静态链接、调调顺序罢了，而在代码实现上，逻辑实现提示挺弯弯绕的，灵活性极差。功能少自然配置上也就简单一些，这算是另类的优点吧。基本的，目前无法手动添加事件执行类的菜单项目，同时内部的菜单项是写死在页面中的，如果想要对这部分进行修改只能去改源码。另外也无法自行响应右键在不同状态下打开时的行为，所以主要的改进有两点：<em>菜单动态生成、支持自定义脚本。</em></p><h2 id="二、设计">二、设计</h2><p>后来也看到了其他博客的右键实现，比如糖果屋、Heo 博客的，不过理想中最完善的自定义右键是 Code-Server，奈何这类大项目真读起来还是太费时间的就没有太过研究，不过重写右键的想法确实被勾起了。原先在右键的功能上的实现有过一些积累，见文章 “<a href="/blog/63296e49/">前端页面的自定义右键与剪切板操作实现</a>”，一并可以拿来参考，接着就是重新设计右键菜单的实现了。</p><h3 id="配置文件">配置文件</h3><p>重构是从配置文件开始的，由于要实现动态菜单，我需要一个统一的菜单对象：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> &#123;<span class="attr">id:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">name:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">icon:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">link:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">event:</span> <span class="string">&#x27;&#x27;</span>, <span class="attr">group:</span> <span class="string">&#x27;&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p><code>id</code>, <code>name</code>, <code>icon</code> 作为基本的属性就不多提了，用来匹配菜单名称和图标；对于链接性质的菜单项，直接将地址填写进 <code>link</code> 中，使用时渲染成 <code>a</code> 链接即可；而对于事件形式的菜单项，写入到 <code>event</code> 里，这里就需要区分内置事件和用户自行输入的事件，所以维护一个内置事件列表，如果输入内容与内置事件匹配，调用右键菜单的内置实现，其余的当作自定义脚本执行；而 <code>group</code> 主要用于区分响应行为上，比如只在图片上右键时才显示菜单项，同样维护一个内置组。</p><p>一个组中可以拥有单个或多个菜单项，内置组根据右键时的状态确定组内菜单是否显示。在不考虑二级菜单的情况下，为了减少整个菜单的数量（长度），含有 <code>event</code> 的组显示时隐藏掉含有 <code>link</code> 项的菜单：基本链接型的菜单都是用户添加，功能型的菜单动态出现。</p><h3 id="启用及排序">启用及排序</h3><p>为了进一步区分，菜单项分为 <code>plugins</code> 和 <code>menus</code> 两大类，在使用上通过 <code>plugins/menus.[组名]</code> 的方式控制菜单的启用及排序，例如：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rightmenus:</span></span><br><span class="line">  <span class="attr">order:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">plugins.elementCheck</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">menus.links</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">menus.links2</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="string">elementCheck</span></span><br><span class="line">      <span class="bullet">-</span> &#123;&#125;</span><br><span class="line">      <span class="bullet">-</span> <span class="string">hr</span></span><br><span class="line">      <span class="bullet">-</span> &#123;&#125;</span><br><span class="line">  <span class="attr">menus:</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> &#123;&#125;</span><br><span class="line">    <span class="attr">links2:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>这里利用 <code>order</code> 控制具体加载的组，同时对于一些特殊的功能，如分割线（<em>hr</em>）和音乐控制器（<em>music</em>），也是在这个属性中配置的，属性项目的前后顺序代表了菜单加载的前后顺序。</p><h3 id="功能示例">功能示例</h3><p><img src="../../img/article/22-04@%E5%8E%9F%E7%94%9FJS%E7%9A%84%E5%8F%B3%E9%94%AE%E5%AE%9E%E7%8E%B0/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%B3%E9%94%AE.svg" alt="预置菜单功能"></p><h2 id="三、实现">三、实现</h2><p>有了数据模型，接下来就是对它的功能实现了 <svg class="iconfont emoji" aria-hidden="true"><use xlink:href="#icon-feiwen"></use></svg>。</p><h3 id="页面渲染">页面渲染</h3><p>读取 order 组的内容遍历加载，由于这里实际填写的是组名，不是具体的内容，所以还需要根据键值去找具体的内容，读取方式类似于 <code>dataGet(rightmenus, 'plugins.elementCheck')</code>：</p><figure class="highlight js"><figcaption><span>用到了可选链操作符，所以需要 Ndoe14+ 环境</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">dataGet</span> = (<span class="params">data, keyStr</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> keys = keyStr.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> currentData = data;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">of</span> keys) &#123;</span><br><span class="line">    currentData = currentData?.[key];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> currentData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到菜单对象后，就是根据其中内容解析成对应元素，以 <code>event</code> 和 <code>link</code> 的值做主要区分，link 属性不为空 写成 a 标签，反之就当事件型的菜单。除了通用的菜单项，额外需要特殊对待的就是独立处理就行了：好在不多，也就是横向的导航栏和音乐控制模块。</p><p>接下来就是这些菜单项的事件响应部分，主题用一个公共的配置对象，将配置文件中的 <code>rightmenus</code> 以 JSON 对象的方式存储在程序中，在 JS 代码里读取这个对象就可以拿到相应内容。所以最开始是打算只判断 <code>event</code> 中的值是否为内置事件列表中的，如果不是就简单的使用 <code>eval()</code> 或者 <code>new Function()</code>，套个 <code>try catch</code> 直接执行得了，可是后来主题增加了内容安全策略（CSP），这两个方法都在禁用列表中，所以只能妥协，先行将 <code>event</code> 的内容封装成函数写到页面中，JS 文件中再根据相应的属性名调用相关函数，如此才不算是动态插入的函数，这一部分放到了 <code>RightMenusFunction</code> 对象中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;% rightMenu.rederFunction = item =&gt; &#123; %&gt; </span><br><span class="line">&lt;%   if (!!item &amp;&amp; !!item[&#x27;event&#x27;] &amp;&amp; item[&#x27;group&#x27;] !== &#x27;navigation&#x27;) &#123; %&gt;</span><br><span class="line">&lt;%     if (rightMenu.defaultEvent.some(value =&gt; &#123; return value === item[&#x27;event&#x27;] &#125;)) &#123; %&gt;</span><br><span class="line">  &lt;!-- RightMenusFunction[&#x27;&lt;%- item.id %&gt;&#x27;] = (fun) =&gt; &#123;fun()&#125; --&gt;</span><br><span class="line">&lt;%     &#125; else if (item[&#x27;group&#x27;] === &#x27;seletctText&#x27;) &#123; %&gt;  </span><br><span class="line">  RightMenusFunction[&#x27;&lt;%- item.id %&gt;&#x27;] = (__text__) =&gt; &#123;&lt;%- item.event %&gt;&#125;</span><br><span class="line">&lt;%     &#125; else if (item[&#x27;group&#x27;] === &#x27;elementCheck&#x27; || item[&#x27;group&#x27;] === &#x27;elementImage&#x27;) &#123; %&gt;  </span><br><span class="line">  RightMenusFunction[&#x27;&lt;%- item.id %&gt;&#x27;] = (__link__) =&gt; &#123;&lt;%- item.event %&gt;&#125;</span><br><span class="line">&lt;%     &#125; else &#123; %&gt;  </span><br><span class="line">  RightMenusFunction[&#x27;&lt;%- item.id %&gt;&#x27;] = () =&gt; &#123;&lt;%- item.event %&gt;&#125;</span><br><span class="line">&lt;%     &#125; %&gt;  </span><br><span class="line">&lt;%   &#125; %&gt;  </span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>上面代码基础的一般性的执行的是 <code>RightMenusFunction['&lt;%- item.id %&gt;'] = () =&gt; &#123;&lt;%- item.event %&gt;&#125;</code> 这一句，利用菜单项的 <code>id</code> 调用它的具体实现，其它的如 <code>seletctText/elementCheck</code> 的特殊处理是因为得传递相关参数，例如事件输入 <code>window.open(__link__)</code>，需要将 <code>__link__</code> 传递成真实的值。</p><h3 id="功能实现">功能实现</h3><p>在 JS 环境中，我可以拿到 <code>volantis.GLOBAL_CONFIG.plugins.rightmenus</code>, <code>RightMenusFunction</code> 两个相关对象，前者提供了配置文件中的设定，后者是一个函数封装。</p><h4 id="元素位置控制">元素位置控制</h4><p>在正式决定哪些菜单项显示之前，得先让整个右键菜单显示出来（并且在正确的位置上），右键菜单 <code>rightmenu-wrapper</code> 默认隐藏、绝对定位，在不设置 <code>top</code>, <code>left</code> 属性前，将其设置 <code>block</code> 就能获取到菜单的宽高，与右键时的位置和屏幕显示宽高做对比，就能决定显示位置了。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> mouseClientX = event.<span class="property">clientX</span>;</span><br><span class="line"><span class="keyword">let</span> mouseClientY = event.<span class="property">clientY</span>;</span><br><span class="line"><span class="keyword">let</span> screenWidth = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span>;</span><br><span class="line"><span class="keyword">let</span> screenHeight = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>;</span><br><span class="line">_rightMenuWrapper.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> menuWidth = _rightMenuContent.<span class="property">offsetWidth</span>;</span><br><span class="line"><span class="keyword">let</span> menuHeight = _rightMenuContent.<span class="property">offsetHeight</span>;</span><br><span class="line"><span class="keyword">let</span> showLeft = mouseClientX + menuWidth &gt; screenWidth </span><br><span class="line">  ? mouseClientX - menuWidth + <span class="number">10</span> : mouseClientX;</span><br><span class="line"><span class="keyword">let</span> showTop = mouseClientY + menuHeight &gt; screenHeight </span><br><span class="line">  ? mouseClientY - menuHeight + <span class="number">10</span> : mouseClientY;</span><br><span class="line">showTop = mouseClientY + menuHeight &gt; screenHeight </span><br><span class="line">  &amp;&amp; showTop &lt; menuHeight &amp;&amp; mouseClientY &lt; menuHeight </span><br><span class="line">  ? showTop + (screenHeight - menuHeight - showTop - <span class="number">10</span>) : showTop;</span><br><span class="line">_rightMenuWrapper.<span class="property">style</span>.<span class="property">left</span> = <span class="string">`<span class="subst">$&#123;showLeft&#125;</span>px`</span>;</span><br><span class="line">_rightMenuWrapper.<span class="property">style</span>.<span class="property">top</span> = <span class="string">`<span class="subst">$&#123;showTop&#125;</span>px`</span>;</span><br></pre></td></tr></table></figure><h4 id="元素状态判断">元素状态判断</h4><p>通过对右键事前的内容进行处理，判断当前是在什么元素上打开右键菜单，处于什么状态。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">globalData.<span class="property">selectText</span> = <span class="variable language_">window</span>.<span class="title function_">getSelection</span>().<span class="title function_">toString</span>();</span><br><span class="line"><span class="comment">// 判断是否为输入框</span></span><br><span class="line"><span class="keyword">if</span> (event.<span class="property">target</span>.<span class="property">tagName</span>.<span class="title function_">toLowerCase</span>() === <span class="string">&#x27;input&#x27;</span> </span><br><span class="line">    || event.<span class="property">target</span>.<span class="property">tagName</span>.<span class="title function_">toLowerCase</span>() === <span class="string">&#x27;textarea&#x27;</span>) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断是否包含链接</span></span><br><span class="line"><span class="keyword">if</span> (!!event.<span class="property">target</span>.<span class="property">href</span> &amp;&amp; <span class="title class_">RightMenus</span>.<span class="property">urlRegx</span>.<span class="title function_">test</span>(event.<span class="property">target</span>.<span class="property">href</span>)) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断是否包含媒体链接</span></span><br><span class="line"><span class="keyword">if</span> (!!event.<span class="property">target</span>.<span class="property">currentSrc</span> &amp;&amp; <span class="title class_">RightMenus</span>.<span class="property">urlRegx</span>.<span class="title function_">test</span>(event.<span class="property">target</span>.<span class="property">currentSrc</span>)) &#123;</span><br><span class="line">  globalData.<span class="property">isMediaLink</span> = <span class="literal">true</span>;</span><br><span class="line">  globalData.<span class="property">mediaLinkUrl</span> = event.<span class="property">target</span>.<span class="property">currentSrc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断是否为图片地址</span></span><br><span class="line"><span class="keyword">if</span> (globalData.<span class="property">isMediaLink</span> &amp;&amp; <span class="title class_">RightMenus</span>.<span class="property">imgRegx</span>.<span class="title function_">test</span>(globalData.<span class="property">mediaLinkUrl</span>)) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断是否为文章页面</span></span><br><span class="line"><span class="keyword">if</span> (!!(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#post.article&#x27;</span>) || <span class="literal">null</span>)) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="菜单项显示控制">菜单项显示控制</h4><p>在确定了右键状态后就可以着手控制元素显隐了，利用 <code>document.querySelectorAll</code> 获取所有的菜单项，遍历菜单根据状态设置 <code>display</code> 属性。此时之前菜单对象的 <code>group</code> 属性就派上用场了，通过对内置组匹配，成组的决定菜单项的显示。</p><p>菜单项的动态显隐带来了一个问题，本来用于间隔的分割线（hr）可能在实际显示上相邻了，如此还需要重新处理下这个：主要思路为默认分割线需要隐藏，遍历菜单，如果两个分割线之间至少存在一个可以显示的菜单，那么分割线就能显示，反之隐藏。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> elementHrItem = &#123; <span class="attr">item</span>: <span class="literal">null</span>, <span class="attr">hide</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">_rightMenuListWithHr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (item.<span class="property">nodeName</span> === <span class="string">&quot;HR&quot;</span>) &#123;</span><br><span class="line">    item.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!elementHrItem.<span class="property">item</span>) &#123;</span><br><span class="line">      elementHrItem.<span class="property">item</span> = item;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (elementHrItem.<span class="property">hide</span> || elementHrItem.<span class="property">item</span>.<span class="property">nextElementSibling</span>.<span class="property">nodeName</span> === <span class="string">&quot;hr&quot;</span>) &#123;</span><br><span class="line">      elementHrItem.<span class="property">item</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    elementHrItem.<span class="property">item</span> = item;</span><br><span class="line">    elementHrItem.<span class="property">hide</span> = <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">style</span>.<span class="property">display</span> === <span class="string">&#x27;block&#x27;</span> &amp;&amp; elementHrItem.<span class="property">hide</span>) &#123;</span><br><span class="line">      elementHrItem.<span class="property">hide</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> (!!elementHrItem.<span class="property">item</span> &amp;&amp; elementHrItem.<span class="property">hide</span>) elementHrItem.<span class="property">item</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="菜单事件处理">菜单事件处理</h4><p>本次右键重构另一特点就是事件绑定与元素绑定分离了，上一版的右键每次打开右键时都需要经历一次事件绑定，本次重构将事件处理部分拆分，核心的实现如下，如果是内置事件，调用 <code>fn[eventName]()</code>，其余的视作用户自定义脚本，除特殊需要判断的其余根据 <code>id</code> 调用 <code>RightMenusFunction</code> 函数。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">item.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">RightMenus</span>.<span class="property">defaultEvent</span>.<span class="title function_">every</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123; <span class="keyword">return</span> eventName !== item &#125;)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (groupName === <span class="string">&#x27;seletctText&#x27;</span>) &#123;</span><br><span class="line">      <span class="title class_">RightMenusFunction</span>[id](globalData.<span class="property">selectText</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (groupName === <span class="string">&#x27;elementCheck&#x27;</span>) &#123;</span><br><span class="line">      <span class="title class_">RightMenusFunction</span>[id](globalData.<span class="property">isLink</span> ? globalData.<span class="property">linkUrl</span> : globalData.<span class="property">mediaLinkUrl</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (groupName === <span class="string">&#x27;elementImage&#x27;</span>) &#123;</span><br><span class="line">      <span class="title class_">RightMenusFunction</span>[id](globalData.<span class="property">mediaLinkUrl</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title class_">RightMenusFunction</span>[id]()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    fn[eventName]()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="内置事件改进">内置事件改进</h4><p>与上一版自定义右键相比，最大的改动是重写了图片复制函数，上一版只能复制 PNG 格式的图片，局限性很大，这一版理论上支持复制所有图片。改动点在于将图片利用 <code>canvas</code> 画出来了，转换成 canvas 后利用 <code>toBlob()</code> 函数获得到了 <code>image/png</code> 的数据，如此完美。</p><p>注：虽然设置了 crossOrigin，但是实际使用时发现相同访问地址下会触发浏览器缓存文件，还是可能会出现 CORS 问题，解决方案是地址后面加参数刷新一下，视作不同链接。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">writeClipImg</span>: <span class="keyword">async</span> (link, success, error) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> image = <span class="keyword">new</span> <span class="title class_">Image</span>;</span><br><span class="line">    image.<span class="property">crossOrigin</span> = <span class="string">&quot;Anonymous&quot;</span>;</span><br><span class="line">    image.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">      <span class="keyword">let</span> context = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">      canvas.<span class="property">width</span> = image.<span class="property">width</span>;</span><br><span class="line">      canvas.<span class="property">height</span> = image.<span class="property">height</span>;</span><br><span class="line">      context.<span class="title function_">drawImage</span>(image, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">      canvas.<span class="title function_">toBlob</span>(<span class="function"><span class="params">blob</span> =&gt;</span> &#123;</span><br><span class="line">        navigator.<span class="property">clipboard</span>.<span class="title function_">write</span>([</span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">ClipboardItem</span>(&#123; <span class="string">&#x27;image/png&#x27;</span>: blob &#125;)</span><br><span class="line">        ]).<span class="title function_">then</span>(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">success</span>(e)</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">error</span>(e)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;, <span class="string">&#x27;image/png&#x27;</span>)</span><br><span class="line">    &#125;, <span class="literal">false</span>)</span><br><span class="line">    image.<span class="property">src</span> = <span class="string">`<span class="subst">$&#123;link&#125;</span>?(lll￢ω￢)`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、自定义">四、自定义</h2><p>额外的，按照自定义事件方式实现了文章页下的『查看上/下一篇』，文本选中时的『复制为 Markdown』功能。</p><figure class="highlight html"><figcaption><span>事件实现</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/h2m.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">onkeydown</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (e.<span class="property">ctrlKey</span> &amp;&amp; e.<span class="property">key</span> === <span class="string">&#x27;a&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  volantis.<span class="property">rightmenu</span>.<span class="property">jump</span> = <span class="function">(<span class="params">type</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> item = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(type === <span class="string">&#x27;prev&#x27;</span> ? <span class="string">&#x27;article .prev-next a.prev&#x27;</span> : <span class="string">&#x27;article .prev-next a.next&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(!!item) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span>(<span class="keyword">typeof</span> pjax !== <span class="string">&#x27;undefined&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        pjax.<span class="title function_">loadUrl</span>(item.<span class="property">href</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = item.<span class="property">href</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  volantis.<span class="property">rightmenu</span>.<span class="property">html2md</span> = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> selectionObj = <span class="variable language_">window</span>.<span class="title function_">getSelection</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> rangObj = selectionObj.<span class="title function_">getRangeAt</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> docFragment = rangObj.<span class="title function_">cloneContents</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> htmlStr = volantis.<span class="property">rightmenu</span>.<span class="title function_">htmlHandle</span>(docFragment);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> markdown = <span class="title function_">h2m</span>(htmlStr);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">VolantisApp</span>.<span class="title function_">utilWriteClipText</span>(markdown);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  volantis.<span class="property">rightmenu</span>.<span class="property">htmlHandle</span> = <span class="function"><span class="params">documentFragment</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    element.<span class="title function_">appendChild</span>(documentFragment);</span></span><br><span class="line"><span class="language-javascript">    volantis.<span class="property">rightmenu</span>.<span class="title function_">removeElement</span>([</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&#x27;div#bottom&#x27;</span>, <span class="string">&#x27;div.new-meta-box&#x27;</span>, <span class="string">&#x27;div.prev-next&#x27;</span>, <span class="string">&#x27;div.atk-avatar&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&#x27;div.atk-footer&#x27;</span>, <span class="string">&#x27;div.atk-main-editor&#x27;</span>, <span class="string">&#x27;div.atk-list-header&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&#x27;div.atk-height-limit-btn&#x27;</span>, <span class="string">&#x27;div.atk-list-read-more&#x27;</span>, <span class="string">&#x27;div.references&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&#x27;#l_cover&#x27;</span>, <span class="string">&#x27;#rightmenu-wrapper&#x27;</span>, <span class="string">&#x27;#s-top&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&#x27;head&#x27;</span>, <span class="string">&#x27;header&#x27;</span>, <span class="string">&#x27;footer&#x27;</span>, <span class="string">&#x27;script&#x27;</span>, <span class="string">&#x27;pjax&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    ], element)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">selectHtml</span> = element.<span class="property">innerHTML</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> element.<span class="property">innerHTML</span>.<span class="title function_">replace</span>(<span class="regexp">/(&lt;button(.*?)btn-copy(.*?)&lt;\/button&gt;)/g</span>, <span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      .<span class="title function_">replace</span>(<span class="regexp">/&lt;figcaption&gt;(.*?)&lt;\/figcaption&gt;/g</span>, <span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  volantis.<span class="property">rightmenu</span>.<span class="property">removeElement</span> = <span class="function">(<span class="params">selects = [], element = <span class="variable language_">document</span></span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    selects.<span class="title function_">forEach</span>(<span class="function"><span class="params">select</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      element.<span class="title function_">querySelectorAll</span>(select).<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        item.<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125; </span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  volantis.<span class="property">rightmenu</span>.<span class="title function_">handle</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> prev = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#prev&#x27;</span>).<span class="property">parentElement</span>,</span></span><br><span class="line"><span class="language-javascript">      next = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#next&#x27;</span>).<span class="property">parentElement</span>,</span></span><br><span class="line"><span class="language-javascript">      articlePrev = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;article .prev-next a.prev p.title&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">      articleNext = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;article .prev-next a.next p.title&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    prev.<span class="property">style</span>.<span class="property">display</span> = articlePrev ? <span class="string">&#x27;block&#x27;</span> : <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    prev.<span class="property">title</span> = articlePrev ? articlePrev.<span class="property">innerText</span> : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    next.<span class="property">style</span>.<span class="property">display</span> = articleNext ? <span class="string">&#x27;block&#x27;</span> : <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    next.<span class="property">title</span> = articleNext ? articleNext.<span class="property">innerText</span> : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="string">&#x27;prevNext&#x27;</span>, <span class="literal">false</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用原生 JS 语法实现网站的自定义右键菜单。</summary>
    
    
    
    <category term="博客" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Volantis" scheme="http://example.com/tags/Volantis/"/>
    
    <category term="Clipboard" scheme="http://example.com/tags/Clipboard/"/>
    
  </entry>
  
  <entry>
    <title>对服务器安全的个人见解 👻</title>
    <link href="http://example.com/2022/03/27/2022/22-03@%E5%AF%B9%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%AA%E4%BA%BA%E8%A7%81%E8%A7%A3/"/>
    <id>http://example.com/2022/03/27/2022/22-03@%E5%AF%B9%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%AA%E4%BA%BA%E8%A7%81%E8%A7%A3/</id>
    <published>2022-03-27T10:07:00.000Z</published>
    <updated>2022-04-13T04:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>对服务器安全的个人见解 👻</p><p>服务器安全一直是个挺重要的事儿，但对于我们这些小站长来说，专业能力不如运维人员，对 Linux 操作系统也没那么熟悉，更别说去读取分析日志提前填补问题了。在个人精力与专业能力之间势必有个选择，总结了目前对服务器安全所做的努力，尽可能防止因为个人原因导致的漏洞问题。</p><p>当然我毕竟不是专业人员，所提出的观点也仅仅代表我的个人观点，此篇分类是为 <strong>杂谈</strong>。</p><h2 id="一、云服务商">一、云服务商</h2><p>这里以腾讯云举例，当你在云服务商购买了服务器/轻量服务器后，除开操作系统本身，服务商的控制台能够提供这几项关键能力：①重置账户密码；②密钥的绑定；③防火墙控制。</p><h3 id="①-重置账户密码">① 重置账户密码</h3><p>重置密码是必须的，毕竟执行 <code>sudo</code> 类命令时，或需要输入当前用户的密码，密码这里建议在常用密码基础上进行个别位的变形，比如将服务器地域和常用密码掺和在一起输入，当然其实这个意义不是很大。</p><h3 id="②-密钥的绑定">② 密钥的绑定</h3><p>原则上密钥不应该共用，实际上共用同一套密钥方便很多。所以实际点的建议是在 <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">创建密钥</a> 时输入安全密码，以及加密算法使用 ed25519，如果是 RSA 算法则需要为 4096 位。</p><p>甚至，你还可以登录服务器，将腾讯云自己的 SSH 密钥删除（位于默认用户的 <code>~/ssh/authorized_keys</code> 中）；同时关闭一键登录功能、卸载 <a href="https://cloud.tencent.com/document/product/1340/50822">自动化助手</a> 和 <a href="https://cloud.tencent.com/document/product/248/53584">云监控 BaradAgent/Sgagent</a> 插件。</p><h3 id="③-防火墙控制">③ 防火墙控制</h3><p>正所谓做的越多，错的越多，所以尽可能的减少端口的开放，比如我自己的服务器只开放了两个端口：用来 Https 访问的 443 端口和用来进行终端连接的 SSH 端口，像 80 端口这类不加密访问的还是趁早埋了吧。</p><p>同时防火墙除了能做端口限制外，还可以用来屏蔽指定地址的访问：比如 Censys 的扫描，直接将它的 IP 段屏蔽，拒绝连接：<a href="https://support.censys.io/hc/en-us/articles/360043177092-Opt-Out-of-Scanning">Can I opt out of Censys scans</a>；再比如，如果你像我一样毫不在意境外的访问流量，而当你在日志里找到了有个 <code>138.246.56.96</code> 的 IP 在对你的服务器做扫描时，可以直接拒绝它整个范围的连接：<code>138.246.0.0/16</code>（德国 慕尼黑大学网段）。</p><h2 id="二、应用控制">二、应用控制</h2><p>如上文所说，我对外开通了用于 SSH 和 Https 的端口，所以就是围绕着这两个对外开放的端口，尽可能的减少对方的入侵渠道，越少越难越好。</p><h3 id="①-SSH-应用">① SSH 应用</h3><p>相较来说，此点最好解决，核心是 <em>禁止密码登录、只允许密钥登录、更换默认端口</em>，这三点可以在配置文件中完成，注：Ubuntu 默认不允许 root 用户的密码登录，但是可以用密钥去登。</p><figure class="highlight plaintext"><figcaption><span>/etc/ssh/sshd_config</span></figcaption><table><tr><td class="code"><pre><span class="line"># 禁止密码登录</span><br><span class="line">PasswordAuthentication no</span><br><span class="line"></span><br><span class="line"># 允许密钥登录</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line"># 修改端口</span><br><span class="line">Port 2022</span><br></pre></td></tr></table></figure><h3 id="②-Web-应用">② Web 应用</h3><p>监听 443 端口的为 Nginx，涉及了从域名到地址、再到各类响应状态等的处理。</p><h4 id="（1）DNS-阶段">（1）DNS 阶段</h4><p>首先我们的理想状态是你通过域名找不到我服务器的真实 IP，备案的话可以使用国内的 CDN 服务，没备案时可以使用 Cloudflare 的代理服务，这两者都可以达到隐藏真实服务器地址的目的。</p><p>如果你依旧像我一样没心没肺毫不在乎访问体验，那么 DNS 阶段可以设置成仅解析境内服务。以 DNSPod 举例，如果你购买了专业版，可以单独新增一条解析线路为云厂商（阿里云、华为云、京东云、青云、亚马逊云等），地址为 <code>127.0.0.1</code> 的解析，让那些请求自个儿玩去吧。</p><h4 id="（2）直接访问">（2）直接访问</h4><p><strong>2.1 拒绝默认域名访问</strong></p><p>假设对方知道了你的 IP，但是不知道这个服务器部署了什么网站。如果没有设置默认站点，对方可以通过一个垃圾域名落到你某个站点上，所以第一步拒绝默认域名访问：</p><figure class="highlight plaintext"><figcaption><span>拒绝 SSL 请求，返回状态码 444</span></figcaption><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  server_name _;</span><br><span class="line">  listen 80 default_server;</span><br><span class="line">  listen 443 ssl http2 default_server;</span><br><span class="line">  ssl_reject_handshake on;</span><br><span class="line">  return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>额外你还可以对具体的网站校验 host</span></figcaption><table><tr><td class="code"><pre><span class="line">if ($host != &#x27;inkss.cn&#x27;)&#123;</span><br><span class="line">  return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.2 拒绝非 CDN 请求访问</strong></p><p>如果对方即知道 IP 又知道域名，可以做到直接通过本地 hosts 绕过 CDN 进行访问。我们可以在 CDN 面板中的回源设置里添加一个只有你知道的请求头和值，然后在网站配置中对其判断，不符合就返回 444。</p><figure class="highlight plaintext"><figcaption><span>只有携带这个请求头才放行</span></figcaption><table><tr><td class="code"><pre><span class="line"># 私有请求头校验 X-Check</span><br><span class="line">if ($http_x-check != &#x27;helloworld&#x27;) &#123;</span><br><span class="line">  return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="（3）避免抛出错误信息">（3）避免抛出错误信息</h4><p>避免直接把错误信息展现给用户，不知道的永远是最好的，可以在网站的配置中重定向 5XX 错误。</p><figure class="highlight plaintext"><figcaption><span>5XX，444 有请</span></figcaption><table><tr><td class="code"><pre><span class="line">error_page 500 501 502 503 504 505  =444 @blackhole;</span><br><span class="line">location @blackhole &#123;</span><br><span class="line">  return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="（4）对关键地址进行一个简单的加密">（4）对关键地址进行一个简单的加密</h4><p>比如 Typecho 博客的后台登录页，直接利用宝塔面板的访问限制功能，对 <code>/admin/</code> 路径加密，授权通过访问打开页面，否则 401 Unauthorized。</p><h4 id="（5）部署-Web-防火墙">（5）部署 Web 防火墙</h4><p>无论你是使用宝塔面板的防火墙还是 ModSecurity 防火墙，请务必开启一个。</p><h4 id="（6）拉黑无意义的-UA">（6）拉黑无意义的 UA</h4><p>具体情况具体分析，我的拉黑比较激进，包含下列内容的 User-Agent 均被我拉黑了：</p><figure class="highlight txt"><figcaption><span>一概拉黑</span></figcaption><table><tr><td class="code"><pre><span class="line">*nmap*|*NMAP*|*HTTrack*|*sqlmap*|*Java*|*zgrab*</span><br><span class="line">*Python*|*python*|*curl*l*Curl*|*wget|*Wget*</span><br><span class="line">*MJ12bot*|*a Palo Alto*|*ltx71*|*censys*</span><br><span class="line">*Go-http-client*|*CensysInspect*</span><br><span class="line">*toutiao*|*Barkrowler*|*AhrefsBot*</span><br></pre></td></tr></table></figure><h2 id="三、其他">三、其他</h2><h3 id="面板">面板</h3><p>事实上我少开放了一个用于访问宝塔的端口，因为直接用 Nginx 反代访问啦。</p><h3 id="数据库">数据库</h3><p>没有必要开放数据库端口，使用 SSH 隧道访问，保持数据库本地连接即可。</p>]]></content>
    
    
    <summary type="html">服务器安全一直是个挺重要的事儿，但对于我们这些小站长来说，专业能力不如运维人员，对 Linux 操作系统也没那么熟悉，更别说去读取分析日志提前填补问题了。在个人精力与专业能力之间势必有个选择，总结了目前对服务器安全所做的努力，尽可能防止因为个人原因导致的漏洞问题。</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="宝塔" scheme="http://example.com/tags/%E5%AE%9D%E5%A1%94/"/>
    
    <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="腾讯云" scheme="http://example.com/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板部署 ModSecurity</title>
    <link href="http://example.com/2022/03/25/2022/22-03@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2ModSecurity/"/>
    <id>http://example.com/2022/03/25/2022/22-03@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2ModSecurity/</id>
    <published>2022-03-25T04:46:00.000Z</published>
    <updated>2022-04-01T11:13:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>宝塔面板的 WAF 防火墙太贵啦，买不起的说，不如支持下社区开源免费的 ModSecurity 防火墙啦。下面是本次使用到的环境：</p><ul><li>Nginx：v1.21.4</li><li>OS：Ubuntu 20.04.4 LTS x86_64(Py3.7.9)</li><li><a href="https://github.com/SpiderLabs/ModSecurity">ModSecurity</a>：v3/master</li><li><a href="https://github.com/SpiderLabs/ModSecurity-nginx">ModSecurity-nginx</a>：v1.0.2</li><li><a href="https://github.com/coreruleset/coreruleset">coreruleset</a>：v3.3.2</li></ul><h2 id="二、ModSecurity-部署">二、ModSecurity 部署</h2><p>总的流程如下：</p><p><img src="../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/%E6%B5%81%E7%A8%8B.svg" alt="流程"></p><h3 id="1-编译部署-ModSecurity">1. 编译部署 ModSecurity</h3><ul><li>① 安装依赖环境</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install make gcc build-essential autoconf automake libtool libfuzzy-dev ssdeep gettext pkg-config libcurl4-openssl-dev liblua5.3-dev libpcre3 libpcre3-dev libxml2 libxml2-dev libyajl-dev doxygen libcurl4 libgeoip-dev libssl-dev zlib1g-dev libxslt-dev liblmdb-dev libpcre++-dev libgd-dev</span><br></pre></td></tr></table></figure><ul><li>② 拉取资源仓库</li></ul><figure class="highlight sh"><figcaption><span>具体的存放目录随意，这个不重要，我是偷懒放到了 '/home/ubuntu/WAF' 目录下。</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ubuntu/WAF</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/SpiderLabs/ModSecurity.git</span><br><span class="line"><span class="built_in">cd</span> ModSecurity/</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure><ul><li>③ 构建环境</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ./build.sh </span><br><span class="line">sudo ./configure</span><br></pre></td></tr></table></figure><ul><li>④ 编译部署</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo make -j4</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h3 id="2-下载连接件">2. 下载连接件</h3><ul><li>① 拉取资源仓库</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ubuntu/WAF</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/SpiderLabs/ModSecurity-nginx.git</span><br></pre></td></tr></table></figure><ul><li>② 检出到最新正式版，具体版本见：<a href="https://github.com/SpiderLabs/ModSecurity-nginx/releases">ModSecurity-nginx/releases</a></li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ModSecurity-nginx</span><br><span class="line">git checkout v1.0.2</span><br></pre></td></tr></table></figure><h3 id="3-编译安装-Nginx">3. 编译安装 Nginx</h3><p>将 ModSecurity-nginx 以动态模块的方式添加至 Nginx，由于宝塔面板的安装特性，你需要先卸载已经存在的 Nginx 应用。在【应用商店-运行环境】中安装 Nginx，选择编译安装，添加模块：</p><figure class="highlight plaintext"><figcaption><span>命令填写如下内容，其他随意</span></figcaption><table><tr><td class="code"><pre><span class="line">--with-compat --add-dynamic-module=/home/ubuntu/WAF/ModSecurity-nginx</span><br></pre></td></tr></table></figure><div class="note warning"><p>注：重装 Nginx 应用会丢失主配置文件，网站配置文件不会丢失。</p></div><h3 id="4-下载规则集">4. 下载规则集</h3><ul><li>① 拉取资源仓库</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ubuntu/WAF</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/coreruleset/coreruleset.git</span><br></pre></td></tr></table></figure><ul><li>② 检出到最新正式版，具体版本见：<a href="https://github.com/coreruleset/coreruleset/releases">coreruleset/releases</a></li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> coreruleset</span><br><span class="line">git checkout v3.3.2</span><br></pre></td></tr></table></figure><h3 id="5-整合配置文件">5. 整合配置文件</h3><ul><li>① 开启 Modsecurity 的阻止攻击</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ubuntu/WAF/ModSecurity</span><br><span class="line"><span class="built_in">cp</span> modsecurity.conf-recommended modsecurity.conf</span><br></pre></td></tr></table></figure><p>将 <code>SecRuleEngine DetectionOnly</code> 修改为 <code>on</code>，DetectionOnly 表示仅记录，修改为 on 用以阻止攻击。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vim modsecurity.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 配置规则引擎是否开启。</span><br><span class="line"># On：开启规则匹配并进行相应的拦截</span><br><span class="line"># Off：关闭规则匹配</span><br><span class="line"># DetectionOnly：开启规则匹配，但不执行任何拦截操作（阻止，拒绝，放弃，允许，代理和重定向)</span><br><span class="line">SecRuleEngine On</span><br></pre></td></tr></table></figure><ul><li>② 配置规则集文件</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ubuntu/WAF/coreruleset</span><br><span class="line"><span class="built_in">cp</span> crs-setup.conf.example crs-setup.conf</span><br></pre></td></tr></table></figure><ul><li>③ 新增配置文件</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ubuntu/WAF</span><br><span class="line"><span class="built_in">touch</span> modsec_includes.conf</span><br></pre></td></tr></table></figure><p>写入如下内容，其中 <em>rules</em> 目录中可以放入我们的自定义白名单、黑名单规则。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 加载 ModSecurity 主配置文件</span><br><span class="line">include ModSecurity/modsecurity.conf</span><br><span class="line"></span><br><span class="line"># 规则集</span><br><span class="line">include coreruleset/crs-setup.conf</span><br><span class="line"></span><br><span class="line"># 自定义白名单</span><br><span class="line">include rules/whitelist.conf</span><br><span class="line"></span><br><span class="line"># 规则集-核心规则文件</span><br><span class="line">include coreruleset/rules/*.conf</span><br><span class="line"></span><br><span class="line"># 自定义全局禁用规则文件</span><br><span class="line">include rules/disablerule.conf</span><br></pre></td></tr></table></figure><ul><li>④ 加载 Nginx 连接模块</li></ul><p>宝塔面板找到 Nginx 设置，选择配置修改，添加如下内容，然后保存并重启 Nginx 即可~</p><figure class="highlight plaintext"><figcaption><span>添加高亮行内容，位置见结构</span></figcaption><table><tr><td class="code"><pre><span class="line">worker_rlimit_nofile 51200;</span><br><span class="line marked">load_module modules/ngx_http_modsecurity_module.so;</span><br><span class="line"></span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">  use epoll;</span><br><span class="line">  worker_connections 51200;</span><br><span class="line">  multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line marked">  modsecurity on;</span><br><span class="line marked">  modsecurity_rules_file /home/ubuntu/WAF/modsec_includes.conf;</span><br><span class="line"></span><br><span class="line">  include       mime.types;</span><br></pre></td></tr></table></figure><div class="note warning"><p><em>modsecurity_rules_file</em> 写入到 <em>http</em> 节点代表全局开启，写入到 <em>server</em> 节点可实现只对具体的某个站点开启。</p></div><h2 id="二、测试与调整">二、测试与调整</h2><h3 id="1-测试-ModSecurity-是否生效">1. 测试 ModSecurity 是否生效</h3><p>修改 <code>/home/ubuntu/WAF/rules/disablerule.conf</code>，添加如下内容：</p><figure class="highlight plaintext"><figcaption><span>添加高亮行内容，位置见结构</span></figcaption><table><tr><td class="code"><pre><span class="line">SecRuleEngine On</span><br><span class="line marked">SecRule ARGS:testparam &quot;@contains test&quot; &quot;id:40000,deny,status:403,msg:&#x27;Test Successful&#x27;&quot;</span><br></pre></td></tr></table></figure><p>重启 Nginx 服务器，浏览器访问带有 <code>?testparam=test</code> 后缀的 URL，如果收到 <code>403 Forbidden</code> 提示则代表规则已经生效，同时你还可以在对应网站的错误日志中找到本次拦截记录。</p><h3 id="2-白名单调整">2. 白名单调整</h3><p>事实上宝塔面板的操作过程中会撞到很多个规则，这些或多或少都可以归类为误判，所以我们需要将宝塔面板的所有操作加入进白名单中，这里采用的是校验请求头的方式，通过检查指定请求头的参数值，如果符合匹配的结果则放行。因为安全考虑为了隐藏服务器的真实 IP，在通过域名访问面板前是套有一层 CDN，所以我们可以在各家的 CDN 配置处手动添加特殊的请求头用以校验。</p><figure class="highlight plaintext"><figcaption><span>如果访问的请求头中包含 head-check: test 则放行所有规则</span></figcaption><table><tr><td class="code"><pre><span class="line">SecRule REQUEST_HEADERS:head-check &quot;test&quot; &quot;id:40001,phase:1,pass,nolog,ctl:ruleEngine=Off&quot;</span><br></pre></td></tr></table></figure><h3 id="3-Cloudflare-添加自定义请求头">3. Cloudflare 添加自定义请求头</h3><p>这里以 Cloudflare 举例如何添加请求头，找到 <strong>规则</strong> ➡ <strong>转换规则</strong> 中的 <strong>HTTP 请求头修改</strong>，传入请求匹配可以根据你的真实情况填写，修改请求头使用 <code>Set static</code>，然后正常填入你自己的 <em>标头名称</em> 和 <em>值</em> 即可。</p><h3 id="三、规则与设置">三、规则与设置</h3><p>待补充…</p>]]></content>
    
    
    <summary type="html">本文介绍了如何部署开源免费的 ModSecurity 防火墙，并导入相应的规则集文件等。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="宝塔" scheme="http://example.com/tags/%E5%AE%9D%E5%A1%94/"/>
    
    <category term="Nginx" scheme="http://example.com/tags/Nginx/"/>
    
    <category term="WAF" scheme="http://example.com/tags/WAF/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板去除商业推广信息</title>
    <link href="http://example.com/2022/02/26/2022/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/02/26/2022/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/</id>
    <published>2022-02-25T17:26:00.000Z</published>
    <updated>2022-03-25T03:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>宝塔在 7.8 版本加入了强制绑定账户，页面元素的限制倒也还好，很简单就能去除，可问题是软件商店的接口加入了登录校验，没登录的情况下获取不到软件列表自然也就无法安装软件了，长远看来用户绑定是必不可少了。当时只是一个强制绑定问题，可万万没想到升级到 7.9 版本后，首页加入了广告：对专业版及其软件的强制推荐，这就有点贴脸输出了，真就恶心人，所以就研究了一下它的页面文件，好在这部分没有加密所以倒可以去掉。</p><p>下面是本次使用到的环境：</p><ul><li>BT：v7.9.0</li><li>OS：Ubuntu 20.04.4 LTS x86_64(Py3.7.9)</li></ul><h2 id="一、页面调整">一、页面调整</h2><p>如下图所示，宝塔开始在首页推荐自家的付费产品了，明晃晃的放在首页。</p><p><img src="../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/a1ca6f919327ac17.jpg" alt="图源：https://91ai.net/thread-972905-1-1.html"></p><h3 id="1-去除首页广告">1. 去除首页广告</h3><ul><li>文件：<strong>/www/server/panel/BTPanel/static/js/public.js</strong></li></ul><p>① 搜索 <code>get_pay_status</code> 函数，直接修改返回值。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//return &#123; advanced: advanced, is_pay:is_pay,  end_time:end_time &#125;;</span></span><br><span class="line marked"><span class="keyword">return</span> &#123; <span class="attr">advanced</span>: <span class="string">&#x27;ltd&#x27;</span>, <span class="attr">is_pay</span>: <span class="literal">true</span>,  <span class="attr">end_time</span>: <span class="number">0</span> &#125;;</span><br></pre></td></tr></table></figure><p>② 搜索 <code>get_product_type</code> 函数，在函数调用处 <code>product_recommend</code> 的 <code>init</code> 方法，直接 <code>return</code>。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">init</span>:<span class="keyword">function</span>(<span class="params">callback</span>)&#123;</span><br><span class="line marked">  <span class="keyword">return</span>;</span><br><span class="line">  <span class="comment">//var _this = this;</span></span><br><span class="line">  <span class="comment">//if(location.pathname.indexOf(&#x27;bind&#x27;) &gt; -1) return;</span></span><br><span class="line">  <span class="comment">//this.get_product_type(function (rdata) &#123;</span></span><br><span class="line">  <span class="comment">//  _this.data = rdata</span></span><br><span class="line">  <span class="comment">//  if(callback) callback(rdata)</span></span><br><span class="line">  <span class="comment">//&#125;)</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>文件：<strong>/www/server/panel/BTPanel/static/js/index.js</strong></li></ul><p>① 搜索 <em><strong>// 推荐安装软件</strong></em>，清空/注释 try 块。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line marked"><span class="comment">// 推荐安装软件</span></span><br><span class="line marked"><span class="comment">// try &#123;</span></span><br><span class="line marked"><span class="comment">//   var recomConfig = product_recommend.get_recommend_type(1)</span></span><br><span class="line marked"><span class="comment">// ...</span></span><br><span class="line marked"><span class="comment">// &#125; catch (error) &#123;</span></span><br><span class="line marked"><span class="comment">//   console.log(error)</span></span><br><span class="line marked"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>② 搜索 <code>setTimeout(function () &#123; _this.get_index_list() &#125;, 400)</code>，取消这部分注释。</p><p>③ 搜索 <code>product_recommend.init</code> 函数，注释如下内容。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">product_recommend.<span class="title function_">init</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line marked">  <span class="comment">//index.get_product_status(function()&#123;</span></span><br><span class="line marked">  <span class="comment">//  index.recommend_paid_version()</span></span><br><span class="line marked">  <span class="comment">//&#125;);</span></span><br><span class="line">  index.<span class="title function_">get_index_list</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="2-去除没软用的页脚版权提示">2. 去除没软用的页脚版权提示</h3><ul><li>文件：<strong>/www/server/panel/BTPanel/templates/default/layout.html</strong></li></ul><p>① 搜索 <code>class=&quot;footer bgw&quot;</code>，将整段删除或注释。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;defaultPath&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line marked"><span class="comment">&lt;!-- &lt;div class=&quot;footer bgw&quot;&gt; &amp;copy;2014- 广东堡塔安全技术有限公司 (bt.cn)&lt;a</span></span><br><span class="line marked"><span class="comment">  style=&quot;margin-left:10px;color:#20a53a;&quot; href=&quot;http://www.bt.cn/bbs&quot; target=&quot;_blank&quot;&gt;求助|建议请上宝塔论坛&lt;/a&gt;</span></span><br><span class="line marked"><span class="comment">&lt;/div&gt; --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-去除首页邀请奖励">3. 去除首页邀请奖励</h3><ul><li>文件：<strong>/www/server/panel/BTPanel/templates/default/index.html</strong></li></ul><p>① 搜索 <code>https://www.bt.cn/invite</code> 将此部分删除或注释；</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;position f12 c6 pull-left&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background:none;padding-left:15px&quot;</span>&gt;</span></span><br><span class="line marked">  <span class="comment">&lt;!-- &lt;span class=&quot;bind-user c4&quot;&gt; --&gt;</span></span><br><span class="line marked">    <span class="comment">&lt;!-- &lt;a href=&quot;javascript:bt.pub.bind_btname();&quot; class=&quot;btlink&quot;&gt;宝塔账户&lt;/a&gt; --&gt;</span></span><br><span class="line marked">  <span class="comment">&lt;!-- &lt;/span&gt; --&gt;</span></span><br><span class="line marked">  <span class="comment">&lt;!-- &#123; % if data[&#x27;pd&#x27;].find(&#x27;免费版&#x27;) != -1 % &#125; --&gt;</span></span><br><span class="line marked">    <span class="comment">&lt;!-- &lt;span id=&quot;bt-fuli&quot; class=&quot;bt-dashi&quot;&gt; --&gt;</span></span><br><span class="line marked">      <span class="comment">&lt;!-- &lt;a class=&quot;btlink ml5&quot; href=&quot;https://www.bt.cn/invite&quot; target=&quot;_blank&quot;&gt;邀请奖励&lt;/a&gt; --&gt;</span></span><br><span class="line marked">    <span class="comment">&lt;!-- &lt;/span&gt; --&gt;</span></span><br><span class="line marked">  <span class="comment">&lt;!-- &#123; % endif % &#125; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;ico-system&quot;</span>&gt;</span>系统:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;info&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:10px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="symbol">&amp;#12288;</span><span class="symbol">&amp;#12288;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;running&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>② 额外的还可以把顶栏其他项目删除或注释。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;pull-right f12 c6&quot;</span> <span class="attr">style</span>=<span class="string">&quot;line-height:52px; margin-right:15px&quot;</span>&gt;</span></span><br><span class="line marked">  <span class="comment">&lt;!--  &lt;span id=&quot;btversion&quot; style=&quot;margin-right:10px&quot;&gt;&lt;a onclick=&quot;index.open_log()&quot;&gt;&lt;/a&gt;&lt;/span&gt; --&gt;</span></span><br><span class="line marked">  <span class="comment">&lt;!-- &lt;span id=&quot;toUpdate&quot;&gt;&lt;a class=&quot;btlink&quot; href=&quot;javascript:index.check_update();&quot;&gt;更新&lt;/a&gt;&lt;/span&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;margin:0 10px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btlink&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:index.re_panel();&quot;</span>&gt;</span>修复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:10px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btlink&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:index.re_server();&quot;</span>&gt;</span>重启<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-去除软件商店的顶栏推广">4. 去除软件商店的顶栏推广</h3><ul><li>文件：<strong>/www/server/panel/BTPanel/templates/default/soft.html</strong></li></ul><p>① 搜索 <code>&lt;div id=&quot;updata_pro_info&quot;&gt;&lt;/div&gt;</code> 并删除或注释。</p><ul><li>文件：<strong>/www/server/panel/BTPanel/static/js/soft.js</strong></li></ul><p>① 搜索 <code>set_soft_tips</code> 清空函数内容；② 搜索 <code>get_dep_list</code> 清空函数内容。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span> 设置软件信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">object</span>&#125; rdata 软件列表请求数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; type 列表类型</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attr">set_soft_tips</span>: <span class="keyword">function</span> (<span class="params">rdata, type</span>) &#123;&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">get_dep_list</span>: <span class="keyword">function</span> (<span class="params">p</span>) &#123;&#125;,</span><br></pre></td></tr></table></figure><h3 id="5-隐藏侧栏顶部-IP-地址显示">5. 隐藏侧栏顶部 IP 地址显示</h3><ul><li>文件：<strong>/www/server/panel/BTPanel/templates/default/layout.html</strong></li></ul><p>① 搜索 <code>class=&quot;mypcip&quot;</code>，将 <code>&#123;&#123;session['address']&#125;&#125;</code> 替换成你想修改的内容。</p><h3 id="6-修改安全入口校验失败的默认内容">6. 修改安全入口校验失败的默认内容</h3><ul><li>文件：<strong>/www/server/panel/BTPanel/templates/default/autherr.html</strong></li></ul><p>① 自行替换你想要的内容。</p><h3 id="7-修改登录页面">7. 修改登录页面</h3><ul><li>文件：<strong>/www/server/panel/BTPanel/templates/default/login.html</strong></li></ul><p>① 去掉傻 logo：搜索 <code>class=&quot;login-images&quot;</code>，删除或注释对应内容。</p><p>② 去掉扫码登录：搜索 <code>class=&quot;entrance&quot;</code>，删除或注释对应内容；</p><p>③ 去掉变量调用：搜索 <em><strong>切换二维码</strong></em>，修改成 <code>var entrance = &#123;&#125;</code>。</p><p>④ 去掉忘记密码：搜索 <code>class=&quot;forget_pwd&quot;</code>，删除或注释对应内容。</p><h3 id="8-避免潜在的缓存">8. 避免潜在的缓存</h3><p>利用 VS Code 在 <code>/www/server/panel</code> 目录下搜索文本：</p><p><code>?version=&#123;&#123;g['version']&#125;&#125;&amp;repair=&#123;&#123;data['js_random']&#125;&#125;</code>，</p><p>替换成 <code>?version=当前时间戳</code>。</p><h3 id="9-最终效果图">9. 最终效果图</h3><details cyan><summary> 首页 | 软件商店 | 登录页 | 入口未通过页 </summary>              <div class='content'>              <div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " col='2' data-group='one'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025015089.png' data-fancybox='one' data-caption='首页'><img fancybox itemprop="contentUrl" src="../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025015089.png" alt="首页"></a><span class='image-caption'>首页</span></div></p><p><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025036693.png' data-fancybox='one' data-caption='软件商店'><img fancybox itemprop="contentUrl" src="../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025036693.png" alt="软件商店"></a><span class='image-caption'>软件商店</span></div></p><p><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025736100.png' data-fancybox='one' data-caption='登录页'><img fancybox itemprop="contentUrl" src="../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025736100.png" alt="登录页"></a><span class='image-caption'>登录页</span></div></p><p><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025805778.png' data-fancybox='one' data-caption='入口未通过页'><img fancybox itemprop="contentUrl" src="../../img/article/22-02@%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%85%8D%E7%BD%AE/image-20220226025805778.png" alt="入口未通过页"></a><span class='image-caption'>入口未通过页</span></div></div>              </div>            </details><h2 id="二、额外">二、额外</h2><h3 id="1-宝塔面板反代访问时去除端口号">1. 宝塔面板反代访问时去除端口号</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxy_pass &quot;http://127.0.0.1:PORT&quot;;</span><br></pre></td></tr></table></figure><ul><li>反代域名监听 80 和 443 端口。</li><li>云防火墙关闭面板端口，服务器开启面板端口。</li><li>Cloudflare 添加域名解析，a 记录到主机 IP。</li></ul><h3 id="2-视频操作">2. 视频操作</h3><p>录了一个视频操作过程在哔哩哔哩中，可以查看以上过程：</p><div class="tag link"><a class="link-card" title="宝塔面板去除商业推广信息" href="https://www.bilibili.com/video/BV1T44y1N7QQ"><div class="left"><img src="/img/default/chrome.png"/></div><div class="right"><p class="text">宝塔面板去除商业推广信息</p><p class="url">https://www.bilibili.com/video/BV1T44y1N7QQ</p></div></a></div><h2 id="三、其它">三、其它</h2><p>关于面板强制绑定账户，看起来更像是迫于监管的压力，现行制度下，手机号 ≈ 人，而宝塔账户强制手机号注册，所以绑定用户 ≈ 实名认证，真就很扯淡。</p>]]></content>
    
    
    <summary type="html">本文介绍了如何去除宝塔面板的商业推广信息，因为宝塔面板在 7.9 版的首页顶部加入了广告、软件列表中添加了付费软件推荐，令人反感，这类元素必须去掉。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="宝塔" scheme="http://example.com/tags/%E5%AE%9D%E5%A1%94/"/>
    
    <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>服务器减配记</title>
    <link href="http://example.com/2022/02/21/2022/22-02@%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%87%8F%E9%85%8D%E7%BD%AE%E8%AE%B0/"/>
    <id>http://example.com/2022/02/21/2022/22-02@%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%87%8F%E9%85%8D%E7%BD%AE%E8%AE%B0/</id>
    <published>2022-02-21T11:00:00.000Z</published>
    <updated>2022-02-21T11:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>服务器减配记</p><p><em>“<ins>这是一篇随笔</ins>”</em> <svg class="iconfont emoji" aria-hidden="true"><use xlink:href="#icon-shuizhuo"></use></svg>。</p><h2 id="一、服务器">一、服务器</h2><p>事情的起源大概是这样的，我原先使用的轻量服务器是来自于腾讯云的无忧主机，配置是 <span class='p logo red'>2-4-8、80G SSD 存储、1200GB 流量、地域上海</span>，在用掉各类优惠卷的情况下，续费价格为 <strong>522/年</strong>。无忧主机的特性是新购/续费价格一致，所以总的来说都挺好。直到后来过年时审视了一下服务器资源占用，平均下来日常均闲置、4G 内存也仅占用了约 33%，这就有点浪费了。</p><p><img src="../../img/article/22-02@%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%87%8F%E9%85%8D%E7%BD%AE%E8%AE%B0/image-20220221194411787.png" alt="占用率很低很低"></p><p>同时还有另外一件事，在 DNSPod 里修改域名解析的时候，翻设置意外看到了个域名共享配置，而这里面却有一个我完全不熟悉的共享账户，这就很细思极恐了同志们。我不得不考虑我这密钥到底泄露了多少。而服务器方面当初也是野蛮配置，随意存放目录，没有细致的规划过。索性抛弃历史包袱，重置了所有账户密码/密钥啊，连带着将服务器也换掉。</p><p>另外我对 CentOS Stream 也早就不爽了，这波操作系统就选用 Ubuntu 了，地域这块儿放弃境内选择香港区域。这里的考虑是：我的备案信息还在，所以还能够用 CDN，访问这块不成问题，反而更需要外网连通性，所以不如拥抱无墙环境。在终端下 Ping 通谷歌时简直热泪盈眶，真的是受够了 Git 拉不动、插件下不下来的体验了。</p><p>而对于配置方面，内存 4G 减到 2G，香港地域的轻量云 2-2 的配置有两种，30G/50G SSD 的差异。考虑到它拥有 30Mbps 的峰值带宽，所以还是选择 50GSSD + 2048G 流量的配置，如此在用完优惠卷后 <strong>429/年</strong>。</p><p>其实这个峰值带宽很玄乎，SpeedTest 测试下来：<em>Download: 260.92 Mbit/s, Upload: 26.11 Mbit/s</em>。但有次终端连接时却感受到命令是一个字母一个字母的网上蹦的，波动很大，不太稳定。</p><h2 id="二、软件环境">二、软件环境</h2><p>毕竟不是专业运维，还是老老实实的选择宝塔面板，宝塔在 7.8 版本软件商店的接口里加入了必须绑定账户的校验，我原来的主机停留在 7.7 就没往上升。这次没辙，只能安装最新的 7.9 了，而这一版，在首页加入了推荐付费软件的广告！就很淦。</p><p>秉着你越不让我干，我偏要做的态度，就翻了它的模板文件，删删改改，眼不见为净：</p><p><img src="../../img/article/22-02@%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%87%8F%E9%85%8D%E7%BD%AE%E8%AE%B0/image-20220221201548961.png" alt="去除了大部分我认为没软用的信息"></p><p>这类商业软件果真还是活成了他们讨厌的样子，翻代码的时候也看到了横幅广告的关闭代码，但是用户界面却又给它隐藏，简直了，目前只能庆幸它代码文件没有加混淆，没有删注释咯，哈哈哈<svg class="iconfont emoji" aria-hidden="true"><use xlink:href="#icon-xiaochulei"></use></svg>。</p><p>就这吧，以上。</p>]]></content>
    
    
    <summary type="html">服务器配置空闲了怎么办，当然是立马降配哇 🎉。</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
</feed>
